# Generated by Django 5.0.14 on 2025-07-20 14:24

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('parties', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Room Name')),
                ('description', models.TextField(blank=True, verbose_name='Room Description')),
                ('max_users', models.PositiveIntegerField(default=100, verbose_name='Max Users')),
                ('is_moderated', models.BooleanField(default=False, verbose_name='Moderated Room')),
                ('allow_anonymous', models.BooleanField(default=False, verbose_name='Allow Anonymous Users')),
                ('slow_mode_seconds', models.PositiveIntegerField(default=0, verbose_name='Slow Mode (seconds)')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('active_users', models.ManyToManyField(blank=True, related_name='active_chat_rooms', to=settings.AUTH_USER_MODEL)),
                ('party', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='chat_room', to='parties.watchparty')),
            ],
            options={
                'verbose_name': 'Chat Room',
                'verbose_name_plural': 'Chat Rooms',
                'db_table': 'chat_rooms',
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField(verbose_name='Message Content')),
                ('message_type', models.CharField(choices=[('text', 'Text Message'), ('emoji', 'Emoji Only'), ('system', 'System Message'), ('join', 'User Joined'), ('leave', 'User Left'), ('reaction', 'Video Reaction')], default='text', max_length=20)),
                ('moderation_status', models.CharField(choices=[('active', 'Active'), ('hidden', 'Hidden'), ('deleted', 'Deleted'), ('flagged', 'Flagged for Review')], default='active', max_length=20)),
                ('moderation_reason', models.CharField(blank=True, max_length=500, verbose_name='Moderation Reason')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Additional Metadata')),
                ('moderated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderated_chat_messages', to=settings.AUTH_USER_MODEL)),
                ('reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='chat.chatmessage')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_chat_messages', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chat.chatroom')),
            ],
            options={
                'verbose_name': 'Chat Message',
                'verbose_name_plural': 'Chat Messages',
                'db_table': 'chat_room_messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatBan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ban_type', models.CharField(choices=[('permanent', 'Permanent Ban'), ('temporary', 'Temporary Ban'), ('timeout', 'Timeout')], default='temporary', max_length=20)),
                ('reason', models.TextField(verbose_name='Ban Reason')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Banned At')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Ban Expires At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ban Active')),
                ('banned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_bans_issued', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_bans', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='banned_users', to='chat.chatroom')),
            ],
            options={
                'verbose_name': 'Chat Ban',
                'verbose_name_plural': 'Chat Bans',
                'db_table': 'chat_bans',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatModerationLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('hide', 'Message Hidden'), ('delete', 'Message Deleted'), ('flag', 'Message Flagged'), ('unflag', 'Message Unflagged'), ('ban_user', 'User Banned'), ('unban_user', 'User Unbanned'), ('timeout_user', 'User Timed Out'), ('promote_mod', 'User Promoted to Moderator'), ('demote_mod', 'User Demoted from Moderator')], max_length=20)),
                ('reason', models.TextField(verbose_name='Reason for Action')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='Action Duration')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Action Taken At')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Action Expires At')),
                ('message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderation_logs', to='chat.chatmessage')),
                ('moderator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderation_actions', to=settings.AUTH_USER_MODEL)),
                ('target_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='moderation_received', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderation_logs', to='chat.chatroom')),
            ],
            options={
                'verbose_name': 'Chat Moderation Log',
                'verbose_name_plural': 'Chat Moderation Logs',
                'db_table': 'chat_moderation_logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['room', 'created_at'], name='chat_modera_room_id_215948_idx'), models.Index(fields=['moderator', 'created_at'], name='chat_modera_moderat_82b64e_idx'), models.Index(fields=['target_user', 'created_at'], name='chat_modera_target__42a19a_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['room', 'created_at'], name='chat_room_m_room_id_85ddfe_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['user', 'created_at'], name='chat_room_m_user_id_d68e69_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['moderation_status'], name='chat_room_m_moderat_357841_idx'),
        ),
        migrations.AddIndex(
            model_name='chatban',
            index=models.Index(fields=['room', 'is_active'], name='chat_bans_room_id_345ed1_idx'),
        ),
        migrations.AddIndex(
            model_name='chatban',
            index=models.Index(fields=['user', 'is_active'], name='chat_bans_user_id_5eb021_idx'),
        ),
        migrations.AddIndex(
            model_name='chatban',
            index=models.Index(fields=['expires_at'], name='chat_bans_expires_b922a2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='chatban',
            unique_together={('room', 'user')},
        ),
    ]
