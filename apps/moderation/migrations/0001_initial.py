# Generated by Django 5.0.14 on 2025-07-24 22:45

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("parties", "0003_watchparty_allow_join_by_code_and_more"),
        ("videos", "0003_videoprocessing_videostreamingurl_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ContentReport",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("spam", "Spam"),
                            ("harassment", "Harassment"),
                            ("inappropriate", "Inappropriate Content"),
                            ("copyright", "Copyright Violation"),
                            ("violence", "Violence"),
                            ("hate_speech", "Hate Speech"),
                            ("misinformation", "Misinformation"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        choices=[
                            ("video", "Video"),
                            ("party", "Watch Party"),
                            ("comment", "Comment"),
                            ("user_profile", "User Profile"),
                            ("message", "Chat Message"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "content_id",
                    models.UUIDField(help_text="ID of the reported content"),
                ),
                (
                    "description",
                    models.TextField(help_text="Detailed description of the issue"),
                ),
                (
                    "evidence_url",
                    models.URLField(
                        blank=True, help_text="URL to evidence (screenshot, etc.)"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Review"),
                            ("investigating", "Under Investigation"),
                            ("resolved", "Resolved"),
                            ("dismissed", "Dismissed"),
                            ("escalated", "Escalated"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                ("resolution_notes", models.TextField(blank=True)),
                ("action_taken", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"is_staff": True},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_content_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reported_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="content_reports_made",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reported_party",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="content_reports",
                        to="parties.watchparty",
                    ),
                ),
                (
                    "reported_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="content_reports_against",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reported_video",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="content_reports",
                        to="videos.video",
                    ),
                ),
            ],
            options={
                "verbose_name": "Content Report",
                "verbose_name_plural": "Content Reports",
                "db_table": "content_reports",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ReportAction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "action_type",
                    models.CharField(
                        choices=[
                            ("warning", "Warning Issued"),
                            ("content_removed", "Content Removed"),
                            ("user_suspended", "User Suspended"),
                            ("user_banned", "User Banned"),
                            ("content_edited", "Content Edited"),
                            ("no_action", "No Action Taken"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField()),
                (
                    "duration_days",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Duration for temporary actions (suspension, etc.)",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "moderator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="content_moderation_actions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="actions",
                        to="moderation.contentreport",
                    ),
                ),
            ],
            options={
                "verbose_name": "Report Action",
                "verbose_name_plural": "Report Actions",
                "db_table": "report_actions",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="contentreport",
            index=models.Index(
                fields=["status", "created_at"], name="content_rep_status_c435df_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="contentreport",
            index=models.Index(
                fields=["content_type", "content_id"],
                name="content_rep_content_ed7472_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="contentreport",
            index=models.Index(
                fields=["reported_by", "created_at"],
                name="content_rep_reporte_0349a3_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="contentreport",
            index=models.Index(
                fields=["assigned_to", "status"], name="content_rep_assigne_f00822_idx"
            ),
        ),
    ]
