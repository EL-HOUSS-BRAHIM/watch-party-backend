# Generated by Django 5.0.14 on 2025-07-20 15:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AWSS3Configuration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Configuration name", max_length=100, unique=True
                    ),
                ),
                ("bucket_name", models.CharField(max_length=255)),
                ("region", models.CharField(default="us-east-1", max_length=50)),
                ("access_key_id", models.CharField(max_length=255)),
                ("secret_access_key", models.TextField()),
                ("cloudfront_domain", models.CharField(blank=True, max_length=255)),
                ("use_cloudfront", models.BooleanField(default=False)),
                (
                    "max_file_size",
                    models.BigIntegerField(
                        default=5368709120,
                        help_text="Max file size in bytes (default: 5GB)",
                    ),
                ),
                (
                    "allowed_file_types",
                    models.JSONField(
                        default=list, help_text="List of allowed MIME types"
                    ),
                ),
                ("default_acl", models.CharField(default="private", max_length=50)),
                ("enable_encryption", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "AWS S3 Configuration",
                "verbose_name_plural": "AWS S3 Configurations",
                "db_table": "integrations_aws_s3_configuration",
            },
        ),
        migrations.CreateModel(
            name="ExternalService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("google_drive", "Google Drive"),
                            ("aws_s3", "AWS S3"),
                            ("google_oauth", "Google OAuth"),
                            ("discord_oauth", "Discord OAuth"),
                            ("github_oauth", "GitHub OAuth"),
                        ],
                        max_length=50,
                        unique=True,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "configuration",
                    models.JSONField(
                        default=dict, help_text="Service-specific configuration"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "External Service",
                "verbose_name_plural": "External Services",
                "db_table": "integrations_external_service",
            },
        ),
        migrations.CreateModel(
            name="SocialOAuthProvider",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        choices=[
                            ("google", "Google"),
                            ("discord", "Discord"),
                            ("github", "GitHub"),
                            ("facebook", "Facebook"),
                            ("twitter", "Twitter"),
                        ],
                        max_length=20,
                        unique=True,
                    ),
                ),
                ("client_id", models.CharField(max_length=255)),
                ("client_secret", models.TextField()),
                ("scope", models.TextField(help_text="OAuth scopes (space-separated)")),
                ("redirect_uri", models.URLField()),
                ("additional_settings", models.JSONField(default=dict)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Social OAuth Provider",
                "verbose_name_plural": "Social OAuth Providers",
                "db_table": "integrations_social_oauth_provider",
            },
        ),
        migrations.CreateModel(
            name="UserServiceConnection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("access_token", models.TextField(blank=True, null=True)),
                ("refresh_token", models.TextField(blank=True, null=True)),
                ("token_expires_at", models.DateTimeField(blank=True, null=True)),
                ("external_user_id", models.CharField(blank=True, max_length=255)),
                ("external_username", models.CharField(blank=True, max_length=255)),
                ("external_email", models.EmailField(blank=True, max_length=254)),
                ("is_connected", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("last_sync_at", models.DateTimeField(blank=True, null=True)),
                (
                    "metadata",
                    models.JSONField(
                        default=dict, help_text="Service-specific metadata"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="integrations.externalservice",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="service_connections",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Service Connection",
                "verbose_name_plural": "User Service Connections",
                "db_table": "integrations_user_service_connection",
                "unique_together": {("user", "service")},
            },
        ),
        migrations.CreateModel(
            name="GoogleDriveFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_id", models.CharField(max_length=255, unique=True)),
                ("file_name", models.CharField(max_length=500)),
                ("mime_type", models.CharField(max_length=100)),
                ("file_size", models.BigIntegerField(blank=True, null=True)),
                ("is_video", models.BooleanField(default=False)),
                ("duration", models.DurationField(blank=True, null=True)),
                ("video_codec", models.CharField(blank=True, max_length=50)),
                ("audio_codec", models.CharField(blank=True, max_length=50)),
                ("resolution", models.CharField(blank=True, max_length=20)),
                ("bitrate", models.IntegerField(blank=True, null=True)),
                (
                    "stream_url",
                    models.URLField(blank=True, help_text="Direct streaming URL"),
                ),
                ("thumbnail_url", models.URLField(blank=True)),
                ("stream_url_expires_at", models.DateTimeField(blank=True, null=True)),
                ("is_public", models.BooleanField(default=False)),
                ("can_stream", models.BooleanField(default=False)),
                ("last_accessed", models.DateTimeField(blank=True, null=True)),
                ("drive_metadata", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "connection",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="google_drive_files",
                        to="integrations.userserviceconnection",
                    ),
                ),
            ],
            options={
                "verbose_name": "Google Drive File",
                "verbose_name_plural": "Google Drive Files",
                "db_table": "integrations_google_drive_file",
                "indexes": [
                    models.Index(
                        fields=["file_id"], name="integration_file_id_c9aba6_idx"
                    ),
                    models.Index(
                        fields=["connection", "is_video"],
                        name="integration_connect_f1a060_idx",
                    ),
                    models.Index(
                        fields=["mime_type"], name="integration_mime_ty_f51e2a_idx"
                    ),
                ],
            },
        ),
    ]
