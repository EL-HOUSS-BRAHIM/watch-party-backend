# Generated by Django 5.0.14 on 2025-07-27 14:14

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="GroupMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("member", "Member"),
                            ("moderator", "Moderator"),
                            ("admin", "Admin"),
                            ("owner", "Owner"),
                        ],
                        default="member",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("active", "Active"),
                            ("banned", "Banned"),
                            ("left", "Left"),
                        ],
                        default="active",
                        max_length=10,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                ("left_at", models.DateTimeField(blank=True, null=True)),
                (
                    "invited_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="group_invitations_sent",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-joined_at"],
            },
        ),
        migrations.CreateModel(
            name="SocialGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("general", "General"),
                            ("movies", "Movies"),
                            ("tv_shows", "TV Shows"),
                            ("anime", "Anime"),
                            ("documentaries", "Documentaries"),
                            ("gaming", "Gaming"),
                            ("music", "Music"),
                            ("sports", "Sports"),
                            ("comedy", "Comedy"),
                            ("horror", "Horror"),
                            ("sci_fi", "Science Fiction"),
                            ("other", "Other"),
                        ],
                        default="general",
                        max_length=20,
                    ),
                ),
                (
                    "privacy",
                    models.CharField(
                        choices=[
                            ("public", "Public"),
                            ("private", "Private"),
                            ("invite_only", "Invite Only"),
                        ],
                        default="public",
                        max_length=15,
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True, null=True, upload_to="group_avatars/"
                    ),
                ),
                (
                    "banner",
                    models.ImageField(
                        blank=True, null=True, upload_to="group_banners/"
                    ),
                ),
                (
                    "rules",
                    models.TextField(
                        blank=True, help_text="Group rules and guidelines"
                    ),
                ),
                (
                    "tags",
                    models.JSONField(
                        default=list, help_text="Group tags for discovery"
                    ),
                ),
                (
                    "max_members",
                    models.IntegerField(
                        default=1000, help_text="Maximum number of members"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_groups",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "members",
                    models.ManyToManyField(
                        related_name="social_groups",
                        through="social.GroupMembership",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="GroupPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                (
                    "post_type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("image", "Image"),
                            ("video", "Video"),
                            ("link", "Link"),
                            ("poll", "Poll"),
                        ],
                        default="text",
                        max_length=10,
                    ),
                ),
                (
                    "attachments",
                    models.JSONField(default=list, help_text="File attachments"),
                ),
                (
                    "metadata",
                    models.JSONField(
                        default=dict, help_text="Post-specific data like poll options"
                    ),
                ),
                ("is_pinned", models.BooleanField(default=False)),
                ("is_deleted", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posts",
                        to="social.socialgroup",
                    ),
                ),
            ],
            options={
                "ordering": ["-is_pinned", "-created_at"],
            },
        ),
        migrations.AddField(
            model_name="groupmembership",
            name="group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="memberships",
                to="social.socialgroup",
            ),
        ),
        migrations.CreateModel(
            name="GroupInvitation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField(blank=True)),
                ("is_accepted", models.BooleanField(default=False)),
                ("is_declined", models.BooleanField(default=False)),
                ("expires_at", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("responded_at", models.DateTimeField(blank=True, null=True)),
                (
                    "invitee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_group_invitations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "inviter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_group_invitations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invitations",
                        to="social.socialgroup",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="GroupEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("watch_party", "Watch Party"),
                            ("discussion", "Discussion"),
                            ("poll", "Poll"),
                            ("announcement", "Announcement"),
                            ("meetup", "Meetup"),
                        ],
                        max_length=20,
                    ),
                ),
                ("scheduled_at", models.DateTimeField()),
                ("duration_minutes", models.IntegerField(default=120)),
                ("max_participants", models.IntegerField(default=50)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "metadata",
                    models.JSONField(default=dict, help_text="Event-specific data"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="social.socialgroup",
                    ),
                ),
            ],
            options={
                "ordering": ["scheduled_at"],
            },
        ),
        migrations.CreateModel(
            name="GroupPostReaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reaction",
                    models.CharField(
                        choices=[
                            ("like", "👍"),
                            ("love", "❤️"),
                            ("laugh", "😂"),
                            ("angry", "😠"),
                            ("sad", "😢"),
                            ("wow", "😮"),
                        ],
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reactions",
                        to="social.grouppost",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("post", "user")},
            },
        ),
        migrations.AddIndex(
            model_name="socialgroup",
            index=models.Index(
                fields=["category", "privacy"], name="social_soci_categor_b3155e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="socialgroup",
            index=models.Index(
                fields=["is_active", "created_at"],
                name="social_soci_is_acti_398d7b_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="groupmembership",
            unique_together={("user", "group")},
        ),
        migrations.AlterUniqueTogether(
            name="groupinvitation",
            unique_together={("group", "invitee")},
        ),
    ]
