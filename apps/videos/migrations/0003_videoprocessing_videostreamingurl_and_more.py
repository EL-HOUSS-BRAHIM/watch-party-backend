# Generated by Django 5.0.14 on 2025-07-24 14:18

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("videos", "0002_video_gdrive_download_url_video_gdrive_file_id_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="VideoProcessing",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("queued", "Queued"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="queued",
                        max_length=20,
                    ),
                ),
                (
                    "progress_percentage",
                    models.FloatField(default=0.0, verbose_name="Progress %"),
                ),
                ("processing_started_at", models.DateTimeField(blank=True, null=True)),
                (
                    "processing_completed_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Error Message"),
                ),
                (
                    "resolutions_generated",
                    models.JSONField(
                        default=list, verbose_name="Generated Resolutions"
                    ),
                ),
                (
                    "thumbnail_generated",
                    models.BooleanField(
                        default=False, verbose_name="Thumbnail Generated"
                    ),
                ),
                (
                    "metadata_extracted",
                    models.BooleanField(
                        default=False, verbose_name="Metadata Extracted"
                    ),
                ),
                (
                    "target_resolutions",
                    models.JSONField(default=list, verbose_name="Target Resolutions"),
                ),
                (
                    "generate_thumbnail",
                    models.BooleanField(
                        default=True, verbose_name="Generate Thumbnail"
                    ),
                ),
                (
                    "extract_metadata",
                    models.BooleanField(default=True, verbose_name="Extract Metadata"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Video Processing",
                "verbose_name_plural": "Video Processing",
                "db_table": "video_processing",
            },
        ),
        migrations.CreateModel(
            name="VideoStreamingUrl",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "resolution",
                    models.CharField(
                        default="original", max_length=20, verbose_name="Resolution"
                    ),
                ),
                ("url", models.URLField(verbose_name="Streaming URL")),
                ("expires_at", models.DateTimeField(verbose_name="Expires At")),
                (
                    "access_count",
                    models.PositiveIntegerField(default=0, verbose_name="Access Count"),
                ),
                (
                    "max_access_count",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Max Access Count"
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(verbose_name="IP Address")),
                ("user_agent", models.TextField(blank=True, verbose_name="User Agent")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_accessed", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Video Streaming URL",
                "verbose_name_plural": "Video Streaming URLs",
                "db_table": "video_streaming_urls",
            },
        ),
        migrations.AddIndex(
            model_name="video",
            index=models.Index(
                fields=["status", "created_at"], name="videos_status_87dc9b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="video",
            index=models.Index(
                fields=["uploader", "visibility"], name="videos_uploade_4264d3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="video",
            index=models.Index(
                fields=["source_type", "status"], name="videos_source__a18876_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="video",
            index=models.Index(
                fields=["visibility", "created_at"], name="videos_visibil_16448a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="videoupload",
            index=models.Index(
                fields=["user", "status"], name="video_uploa_user_id_62d5c2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="videoupload",
            index=models.Index(
                fields=["status", "created_at"], name="video_uploa_status_33f239_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="videoupload",
            index=models.Index(
                fields=["video", "status"], name="video_uploa_video_i_c299c8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="videoview",
            index=models.Index(
                fields=["video", "created_at"], name="video_views_video_i_9feda5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="videoview",
            index=models.Index(
                fields=["user", "created_at"], name="video_views_user_id_4f2021_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="videoview",
            index=models.Index(
                fields=["video", "user"], name="video_views_video_i_33cc77_idx"
            ),
        ),
        migrations.AddField(
            model_name="videoprocessing",
            name="video",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="processing",
                to="videos.video",
            ),
        ),
        migrations.AddField(
            model_name="videostreamingurl",
            name="requested_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="requested_urls",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="videostreamingurl",
            name="video",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="streaming_urls",
                to="videos.video",
            ),
        ),
        migrations.AddIndex(
            model_name="videoprocessing",
            index=models.Index(
                fields=["status", "created_at"], name="video_proce_status_b951e5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="videoprocessing",
            index=models.Index(
                fields=["processing_started_at"], name="video_proce_process_d4ff9b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="videostreamingurl",
            index=models.Index(
                fields=["video", "resolution"], name="video_strea_video_i_8a4bc1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="videostreamingurl",
            index=models.Index(
                fields=["expires_at"], name="video_strea_expires_9bbf5f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="videostreamingurl",
            index=models.Index(
                fields=["requested_by", "created_at"],
                name="video_strea_request_17c992_idx",
            ),
        ),
    ]
