# Generated by Django 5.0.14 on 2025-07-20 14:24

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('parties', '0001_initial'),
        ('videos', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('party_invite', 'Party Invitation'), ('party_started', 'Party Started'), ('party_reminder', 'Party Reminder'), ('friend_request', 'Friend Request'), ('friend_accepted', 'Friend Request Accepted'), ('video_uploaded', 'Video Uploaded'), ('video_processed', 'Video Processing Complete'), ('comment_reply', 'Comment Reply'), ('system_update', 'System Update'), ('subscription_expiring', 'Subscription Expiring'), ('subscription_expired', 'Subscription Expired'), ('payment_success', 'Payment Successful'), ('payment_failed', 'Payment Failed'), ('account_security', 'Account Security Alert'), ('maintenance_notice', 'Maintenance Notice'), ('feature_announcement', 'New Feature'), ('community_update', 'Community Update')], max_length=50, unique=True)),
                ('title_template', models.CharField(max_length=200, verbose_name='Title Template')),
                ('content_template', models.TextField(verbose_name='Content Template')),
                ('email_subject_template', models.CharField(blank=True, max_length=200, verbose_name='Email Subject Template')),
                ('email_content_template', models.TextField(blank=True, verbose_name='Email Content Template')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='Icon Class')),
                ('color', models.CharField(default='blue', max_length=20, verbose_name='Notification Color')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=20)),
                ('can_disable', models.BooleanField(default=True, verbose_name='Users Can Disable')),
                ('requires_action', models.BooleanField(default=False, verbose_name='Requires User Action')),
                ('auto_expire_hours', models.PositiveIntegerField(blank=True, null=True, verbose_name='Auto Expire (hours)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Template Active')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
                'db_table': 'notification_templates',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='Notification Title')),
                ('content', models.TextField(verbose_name='Notification Content')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='Icon Class')),
                ('color', models.CharField(default='blue', max_length=20, verbose_name='Notification Color')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=20)),
                ('action_url', models.URLField(blank=True, verbose_name='Action URL')),
                ('action_text', models.CharField(blank=True, max_length=50, verbose_name='Action Button Text')),
                ('requires_action', models.BooleanField(default=False, verbose_name='Requires User Action')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('dismissed', 'Dismissed'), ('expired', 'Expired'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('is_read', models.BooleanField(default=False, verbose_name='Read Status')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('scheduled_at', models.DateTimeField(blank=True, null=True, verbose_name='Scheduled For')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Sent At')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='Delivered At')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Read At')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expires At')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Additional Metadata')),
                ('party', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='parties.watchparty')),
                ('related_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_notifications', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='videos.video')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='notifications.notificationtemplate')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'db_table': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreferences',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notifications_enabled', models.BooleanField(default=True, verbose_name='Enable Notifications')),
                ('quiet_hours_start', models.TimeField(blank=True, null=True, verbose_name='Quiet Hours Start')),
                ('quiet_hours_end', models.TimeField(blank=True, null=True, verbose_name='Quiet Hours End')),
                ('user_timezone', models.CharField(default='UTC', max_length=50, verbose_name='User Timezone')),
                ('in_app_enabled', models.BooleanField(default=True, verbose_name='In-App Notifications')),
                ('email_enabled', models.BooleanField(default=True, verbose_name='Email Notifications')),
                ('push_enabled', models.BooleanField(default=False, verbose_name='Push Notifications')),
                ('sms_enabled', models.BooleanField(default=False, verbose_name='SMS Notifications')),
                ('party_invites', models.BooleanField(default=True, verbose_name='Party Invitations')),
                ('party_updates', models.BooleanField(default=True, verbose_name='Party Updates')),
                ('friend_requests', models.BooleanField(default=True, verbose_name='Friend Requests')),
                ('video_updates', models.BooleanField(default=True, verbose_name='Video Updates')),
                ('system_updates', models.BooleanField(default=True, verbose_name='System Updates')),
                ('billing_notifications', models.BooleanField(default=True, verbose_name='Billing Notifications')),
                ('security_alerts', models.BooleanField(default=True, verbose_name='Security Alerts')),
                ('marketing_emails', models.BooleanField(default=False, verbose_name='Marketing Emails')),
                ('email_frequency', models.CharField(choices=[('instant', 'Instant'), ('hourly', 'Hourly Digest'), ('daily', 'Daily Digest'), ('weekly', 'Weekly Digest'), ('never', 'Never')], default='instant', max_length=20)),
                ('push_token', models.CharField(blank=True, max_length=500, verbose_name='Push Token')),
                ('push_device_type', models.CharField(blank=True, max_length=20, verbose_name='Device Type')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Preferences',
                'verbose_name_plural': 'Notification Preferences',
                'db_table': 'notification_preferences',
            },
        ),
        migrations.CreateModel(
            name='NotificationDelivery',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('channel', models.CharField(choices=[('in_app', 'In-App'), ('email', 'Email'), ('push', 'Push'), ('sms', 'SMS')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('bounced', 'Bounced'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('provider_message_id', models.CharField(blank=True, max_length=200, verbose_name='Provider Message ID')),
                ('recipient_address', models.CharField(blank=True, max_length=200, verbose_name='Recipient Address')),
                ('attempts', models.PositiveIntegerField(default=0, verbose_name='Delivery Attempts')),
                ('max_attempts', models.PositiveIntegerField(default=3, verbose_name='Max Attempts')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('error_code', models.CharField(blank=True, max_length=50, verbose_name='Error Code')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Sent At')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='Delivered At')),
                ('failed_at', models.DateTimeField(blank=True, null=True, verbose_name='Failed At')),
                ('next_retry_at', models.DateTimeField(blank=True, null=True, verbose_name='Next Retry At')),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='notifications.notification')),
            ],
            options={
                'verbose_name': 'Notification Delivery',
                'verbose_name_plural': 'Notification Deliveries',
                'db_table': 'notification_deliveries',
                'indexes': [models.Index(fields=['status'], name='notificatio_status_ab0dcc_idx'), models.Index(fields=['channel', 'status'], name='notificatio_channel_169003_idx'), models.Index(fields=['next_retry_at'], name='notificatio_next_re_f74caa_idx'), models.Index(fields=['created_at'], name='notificatio_created_fee8f7_idx')],
                'unique_together': {('notification', 'channel')},
            },
        ),
        migrations.CreateModel(
            name='NotificationQueue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Queue Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('total_notifications', models.PositiveIntegerField(default=0, verbose_name='Total Notifications')),
                ('processed_count', models.PositiveIntegerField(default=0, verbose_name='Processed Count')),
                ('failed_count', models.PositiveIntegerField(default=0, verbose_name='Failed Count')),
                ('scheduled_at', models.DateTimeField(verbose_name='Scheduled At')),
                ('priority', models.IntegerField(default=0, verbose_name='Priority')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Started At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_queues', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Queue',
                'verbose_name_plural': 'Notification Queues',
                'db_table': 'notification_queues',
                'ordering': ['-priority', 'scheduled_at'],
                'indexes': [models.Index(fields=['status', 'scheduled_at'], name='notificatio_status_59c74f_idx'), models.Index(fields=['priority', 'scheduled_at'], name='notificatio_priorit_343b58_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'status'], name='notificatio_user_id_8ab96f_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'is_read'], name='notificatio_user_id_a4dd5c_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['created_at'], name='notificatio_created_e4c995_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['scheduled_at'], name='notificatio_schedul_2a5c00_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['expires_at'], name='notificatio_expires_66996e_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['priority'], name='notificatio_priorit_17ee5f_idx'),
        ),
    ]
