# Generated by Django 5.0.14 on 2025-07-20 14:24

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Plan Name')),
                ('description', models.TextField(blank=True, verbose_name='Plan Description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('currency', models.CharField(default='USD', max_length=3, verbose_name='Currency')),
                ('billing_interval', models.CharField(choices=[('month', 'Monthly'), ('year', 'Yearly')], default='month', max_length=10)),
                ('stripe_price_id', models.CharField(max_length=255, unique=True, verbose_name='Stripe Price ID')),
                ('stripe_product_id', models.CharField(max_length=255, verbose_name='Stripe Product ID')),
                ('max_parties_per_month', models.PositiveIntegerField(default=10, verbose_name='Max Parties per Month')),
                ('max_participants_per_party', models.PositiveIntegerField(default=10, verbose_name='Max Participants per Party')),
                ('max_video_storage_gb', models.PositiveIntegerField(default=5, verbose_name='Max Video Storage (GB)')),
                ('allows_hd_streaming', models.BooleanField(default=False, verbose_name='HD Streaming Allowed')),
                ('allows_downloads', models.BooleanField(default=False, verbose_name='Downloads Allowed')),
                ('priority_support', models.BooleanField(default=False, verbose_name='Priority Support')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Is Featured')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Subscription Plan',
                'verbose_name_plural': 'Subscription Plans',
                'db_table': 'subscription_plans',
                'ordering': ['price'],
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stripe_payment_method_id', models.CharField(max_length=255, unique=True, verbose_name='Stripe Payment Method ID')),
                ('card_brand', models.CharField(choices=[('visa', 'Visa'), ('mastercard', 'Mastercard'), ('amex', 'American Express'), ('discover', 'Discover'), ('diners', 'Diners Club'), ('jcb', 'JCB'), ('unionpay', 'UnionPay'), ('unknown', 'Unknown')], default='unknown', max_length=20)),
                ('card_last4', models.CharField(max_length=4, verbose_name='Last 4 Digits')),
                ('card_exp_month', models.PositiveSmallIntegerField(verbose_name='Expiry Month')),
                ('card_exp_year', models.PositiveSmallIntegerField(verbose_name='Expiry Year')),
                ('is_default', models.BooleanField(default=False, verbose_name='Is Default Payment Method')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Payment Method',
                'verbose_name_plural': 'Payment Methods',
                'db_table': 'payment_methods',
                'ordering': ['-is_default', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stripe_subscription_id', models.CharField(max_length=255, unique=True, verbose_name='Stripe Subscription ID')),
                ('stripe_customer_id', models.CharField(max_length=255, verbose_name='Stripe Customer ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('past_due', 'Past Due'), ('canceled', 'Canceled'), ('unpaid', 'Unpaid'), ('trialing', 'Trialing'), ('incomplete', 'Incomplete')], default='active', max_length=20)),
                ('current_period_start', models.DateTimeField(verbose_name='Current Period Start')),
                ('current_period_end', models.DateTimeField(verbose_name='Current Period End')),
                ('trial_start', models.DateTimeField(blank=True, null=True, verbose_name='Trial Start')),
                ('trial_end', models.DateTimeField(blank=True, null=True, verbose_name='Trial End')),
                ('cancel_at_period_end', models.BooleanField(default=False, verbose_name='Cancel at Period End')),
                ('canceled_at', models.DateTimeField(blank=True, null=True, verbose_name='Canceled At')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to=settings.AUTH_USER_MODEL)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subscriptions', to='billing.subscriptionplan')),
            ],
            options={
                'verbose_name': 'Subscription',
                'verbose_name_plural': 'Subscriptions',
                'db_table': 'subscriptions',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stripe_invoice_id', models.CharField(max_length=255, unique=True, verbose_name='Stripe Invoice ID')),
                ('invoice_number', models.CharField(max_length=50, unique=True, verbose_name='Invoice Number')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('open', 'Open'), ('paid', 'Paid'), ('uncollectible', 'Uncollectible'), ('void', 'Void')], default='draft', max_length=20)),
                ('subtotal', models.PositiveIntegerField(verbose_name='Subtotal (cents)')),
                ('tax_amount', models.PositiveIntegerField(default=0, verbose_name='Tax Amount (cents)')),
                ('discount_amount', models.PositiveIntegerField(default=0, verbose_name='Discount Amount (cents)')),
                ('total', models.PositiveIntegerField(verbose_name='Total Amount (cents)')),
                ('amount_paid', models.PositiveIntegerField(default=0, verbose_name='Amount Paid (cents)')),
                ('amount_due', models.PositiveIntegerField(default=0, verbose_name='Amount Due (cents)')),
                ('currency', models.CharField(default='USD', max_length=3, verbose_name='Currency')),
                ('invoice_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Invoice Date')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name='Due Date')),
                ('paid_at', models.DateTimeField(blank=True, null=True, verbose_name='Paid At')),
                ('invoice_pdf', models.URLField(blank=True, verbose_name='Invoice PDF URL')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to=settings.AUTH_USER_MODEL)),
                ('subscription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoices', to='billing.subscription')),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
                'db_table': 'invoices',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Promo Code')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('discount_type', models.CharField(choices=[('percent', 'Percentage'), ('amount', 'Fixed Amount')], default='percent', max_length=10)),
                ('discount_value', models.PositiveIntegerField(verbose_name='Discount Value')),
                ('stripe_coupon_id', models.CharField(blank=True, max_length=255, verbose_name='Stripe Coupon ID')),
                ('max_uses', models.PositiveIntegerField(blank=True, null=True, verbose_name='Max Uses')),
                ('times_used', models.PositiveIntegerField(default=0, verbose_name='Times Used')),
                ('max_uses_per_customer', models.PositiveIntegerField(default=1, verbose_name='Max Uses Per Customer')),
                ('valid_from', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Valid From')),
                ('valid_until', models.DateTimeField(blank=True, null=True, verbose_name='Valid Until')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('minimum_amount', models.PositiveIntegerField(blank=True, null=True, verbose_name='Minimum Amount (cents)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applicable_plans', models.ManyToManyField(blank=True, to='billing.subscriptionplan', verbose_name='Applicable Plans')),
            ],
            options={
                'verbose_name': 'Promo Code',
                'verbose_name_plural': 'Promo Codes',
                'db_table': 'promo_codes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PromoCodeUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_amount', models.PositiveIntegerField(verbose_name='Discount Amount Applied (cents)')),
                ('original_amount', models.PositiveIntegerField(verbose_name='Original Amount (cents)')),
                ('final_amount', models.PositiveIntegerField(verbose_name='Final Amount (cents)')),
                ('used_at', models.DateTimeField(auto_now_add=True, verbose_name='Used At')),
                ('promo_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usages', to='billing.promocode')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promo_usages', to=settings.AUTH_USER_MODEL)),
                ('subscription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='promo_usages', to='billing.subscription')),
            ],
            options={
                'verbose_name': 'Promo Code Usage',
                'verbose_name_plural': 'Promo Code Usages',
                'db_table': 'promo_code_usages',
                'ordering': ['-used_at'],
                'unique_together': {('promo_code', 'user', 'subscription')},
            },
        ),
    ]
