# Generated by Django 5.0.14 on 2025-08-10 22:39

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MobileDevice",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "device_id",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Device ID"
                    ),
                ),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("ios", "iOS"),
                            ("android", "Android"),
                            ("web", "Web"),
                            ("unknown", "Unknown"),
                        ],
                        default="unknown",
                        max_length=20,
                    ),
                ),
                (
                    "model",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Device Model"
                    ),
                ),
                (
                    "os_version",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="OS Version"
                    ),
                ),
                (
                    "app_version",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="App Version"
                    ),
                ),
                (
                    "push_token",
                    models.CharField(
                        blank=True, max_length=500, null=True, verbose_name="Push Token"
                    ),
                ),
                (
                    "push_enabled",
                    models.BooleanField(
                        default=True, verbose_name="Push Notifications Enabled"
                    ),
                ),
                (
                    "last_sync",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last Sync"
                    ),
                ),
                (
                    "last_active",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last Active"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "settings",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Device Settings"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mobile_devices",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Mobile Device",
                "verbose_name_plural": "Mobile Devices",
                "db_table": "mobile_devices",
                "ordering": ["-last_active"],
            },
        ),
        migrations.CreateModel(
            name="MobileAppCrash",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "crash_id",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Crash ID"
                    ),
                ),
                ("stack_trace", models.TextField(verbose_name="Stack Trace")),
                (
                    "exception_type",
                    models.CharField(max_length=100, verbose_name="Exception Type"),
                ),
                (
                    "exception_message",
                    models.TextField(verbose_name="Exception Message"),
                ),
                (
                    "screen_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Screen Name"
                    ),
                ),
                (
                    "user_action",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="User Action"
                    ),
                ),
                (
                    "memory_usage_mb",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Memory Usage (MB)"
                    ),
                ),
                (
                    "battery_level",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Battery Level (%)"
                    ),
                ),
                (
                    "is_resolved",
                    models.BooleanField(default=False, verbose_name="Is Resolved"),
                ),
                (
                    "resolved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Resolved At"
                    ),
                ),
                (
                    "resolution_notes",
                    models.TextField(blank=True, verbose_name="Resolution Notes"),
                ),
                ("crashed_at", models.DateTimeField(verbose_name="Crashed At")),
                ("reported_at", models.DateTimeField(auto_now_add=True)),
                (
                    "device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="crash_reports",
                        to="mobile.mobiledevice",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mobile App Crash",
                "verbose_name_plural": "Mobile App Crashes",
                "db_table": "mobile_app_crashes",
                "ordering": ["-crashed_at"],
            },
        ),
        migrations.CreateModel(
            name="MobileAnalytics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("app_open", "App Open"),
                            ("app_close", "App Close"),
                            ("screen_view", "Screen View"),
                            ("button_tap", "Button Tap"),
                            ("video_play", "Video Play"),
                            ("video_pause", "Video Pause"),
                            ("party_join", "Party Join"),
                            ("party_leave", "Party Leave"),
                            ("chat_message", "Chat Message"),
                            ("feature_use", "Feature Use"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "event_name",
                    models.CharField(max_length=100, verbose_name="Event Name"),
                ),
                (
                    "event_data",
                    models.JSONField(default=dict, verbose_name="Event Data"),
                ),
                (
                    "session_id",
                    models.CharField(max_length=255, verbose_name="Session ID"),
                ),
                (
                    "screen_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Screen Name"
                    ),
                ),
                (
                    "load_time_ms",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Load Time (ms)"
                    ),
                ),
                (
                    "memory_usage_mb",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Memory Usage (MB)"
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics",
                        to="mobile.mobiledevice",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mobile Analytics",
                "verbose_name_plural": "Mobile Analytics",
                "db_table": "mobile_analytics",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="MobileSyncData",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "sync_type",
                    models.CharField(
                        choices=[
                            ("full", "Full Sync"),
                            ("incremental", "Incremental Sync"),
                            ("emergency", "Emergency Sync"),
                        ],
                        default="incremental",
                        max_length=20,
                    ),
                ),
                (
                    "sync_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "data_types",
                    models.JSONField(default=list, verbose_name="Data Types Synced"),
                ),
                (
                    "data_size_bytes",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Data Size (bytes)"
                    ),
                ),
                (
                    "records_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Records Count"
                    ),
                ),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "duration_seconds",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Error Message"),
                ),
                (
                    "retry_count",
                    models.PositiveIntegerField(default=0, verbose_name="Retry Count"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sync_logs",
                        to="mobile.mobiledevice",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mobile Sync Data",
                "verbose_name_plural": "Mobile Sync Data",
                "db_table": "mobile_sync_data",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="mobiledevice",
            index=models.Index(
                fields=["user", "platform"], name="mobile_devi_user_id_50d962_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mobiledevice",
            index=models.Index(
                fields=["device_id"], name="mobile_devi_device__554fe2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mobiledevice",
            index=models.Index(
                fields=["last_active"], name="mobile_devi_last_ac_5afa5d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mobileappcrash",
            index=models.Index(
                fields=["device", "crashed_at"], name="mobile_app__device__d85b53_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mobileappcrash",
            index=models.Index(
                fields=["crash_id"], name="mobile_app__crash_i_089e71_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mobileappcrash",
            index=models.Index(
                fields=["is_resolved"], name="mobile_app__is_reso_562ed6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mobileanalytics",
            index=models.Index(
                fields=["device", "event_type"], name="mobile_anal_device__0ba8a0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mobileanalytics",
            index=models.Index(
                fields=["timestamp"], name="mobile_anal_timesta_274687_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mobileanalytics",
            index=models.Index(
                fields=["session_id"], name="mobile_anal_session_77d576_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mobilesyncdata",
            index=models.Index(
                fields=["device", "sync_status"], name="mobile_sync_device__641d5b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mobilesyncdata",
            index=models.Index(
                fields=["created_at"], name="mobile_sync_created_ce4d10_idx"
            ),
        ),
    ]
