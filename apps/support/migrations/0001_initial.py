# Generated by Django 5.0.14 on 2025-07-27 14:38

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="FAQCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Category Name"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        max_length=100, unique=True, verbose_name="URL Slug"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Category Description"),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Icon Class"
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Display Order"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "FAQ Category",
                "verbose_name_plural": "FAQ Categories",
                "db_table": "faq_categories",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="SupportTicket",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "ticket_number",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="Ticket Number"
                    ),
                ),
                ("subject", models.CharField(max_length=200, verbose_name="Subject")),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("technical", "Technical Issue"),
                            ("account", "Account Issue"),
                            ("billing", "Billing Question"),
                            ("feature", "Feature Request"),
                            ("bug", "Bug Report"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("in_progress", "In Progress"),
                            ("waiting_user", "Waiting for User"),
                            ("resolved", "Resolved"),
                            ("closed", "Closed"),
                        ],
                        default="open",
                        max_length=20,
                    ),
                ),
                (
                    "resolution_notes",
                    models.TextField(blank=True, verbose_name="Resolution Notes"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("closed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_tickets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="support_tickets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Support Ticket",
                "verbose_name_plural": "Support Tickets",
                "db_table": "support_tickets",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SupportTicketMessage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("message", models.TextField(verbose_name="Message Content")),
                (
                    "is_internal",
                    models.BooleanField(default=False, verbose_name="Internal Note"),
                ),
                (
                    "attachment_url",
                    models.URLField(blank=True, verbose_name="Attachment URL"),
                ),
                (
                    "attachment_name",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Attachment Name"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="support_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "ticket",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="support.supportticket",
                    ),
                ),
            ],
            options={
                "verbose_name": "Support Ticket Message",
                "verbose_name_plural": "Support Ticket Messages",
                "db_table": "support_ticket_messages",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserFeedback",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=200, verbose_name="Feedback Title"),
                ),
                ("description", models.TextField(verbose_name="Feedback Description")),
                (
                    "feedback_type",
                    models.CharField(
                        choices=[
                            ("bug", "Bug Report"),
                            ("feature", "Feature Request"),
                            ("improvement", "Improvement Suggestion"),
                            ("compliment", "Compliment"),
                            ("complaint", "Complaint"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("submitted", "Submitted"),
                            ("reviewed", "Under Review"),
                            ("planned", "Planned"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("declined", "Declined"),
                        ],
                        default="submitted",
                        max_length=20,
                    ),
                ),
                (
                    "upvotes",
                    models.PositiveIntegerField(default=0, verbose_name="Upvotes"),
                ),
                (
                    "downvotes",
                    models.PositiveIntegerField(default=0, verbose_name="Downvotes"),
                ),
                (
                    "admin_response",
                    models.TextField(blank=True, verbose_name="Admin Response"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Feedback",
                "verbose_name_plural": "User Feedback",
                "db_table": "user_feedback",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="FeedbackVote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vote",
                    models.CharField(
                        choices=[("up", "Upvote"), ("down", "Downvote")], max_length=4
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback_votes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "feedback",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="votes",
                        to="support.userfeedback",
                    ),
                ),
            ],
            options={
                "verbose_name": "Feedback Vote",
                "verbose_name_plural": "Feedback Votes",
                "db_table": "feedback_votes",
            },
        ),
        migrations.CreateModel(
            name="FAQ",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("question", models.CharField(max_length=500, verbose_name="Question")),
                ("answer", models.TextField(verbose_name="Answer")),
                (
                    "keywords",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="Search Keywords"
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(default=False, verbose_name="Featured FAQ"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Display Order"
                    ),
                ),
                (
                    "view_count",
                    models.PositiveIntegerField(default=0, verbose_name="View Count"),
                ),
                (
                    "helpful_votes",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Helpful Votes"
                    ),
                ),
                (
                    "unhelpful_votes",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Unhelpful Votes"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_faqs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="faqs",
                        to="support.faqcategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "FAQ",
                "verbose_name_plural": "FAQs",
                "db_table": "faqs",
                "ordering": ["order", "-is_featured", "-helpful_votes"],
                "indexes": [
                    models.Index(
                        fields=["category", "is_active"], name="faqs_categor_42a6e3_idx"
                    ),
                    models.Index(
                        fields=["is_featured", "is_active"],
                        name="faqs_is_feat_5349b6_idx",
                    ),
                    models.Index(fields=["keywords"], name="faqs_keyword_e0b0fb_idx"),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="supportticket",
            index=models.Index(
                fields=["user", "status"], name="support_tic_user_id_057736_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="supportticket",
            index=models.Index(
                fields=["status", "priority"], name="support_tic_status_c8e2c5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="supportticket",
            index=models.Index(
                fields=["assigned_to", "status"], name="support_tic_assigne_9415d6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="supportticket",
            index=models.Index(
                fields=["category", "status"], name="support_tic_categor_276175_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userfeedback",
            index=models.Index(
                fields=["feedback_type", "status"],
                name="user_feedba_feedbac_7ed9c1_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="userfeedback",
            index=models.Index(
                fields=["status", "-upvotes"], name="user_feedba_status_1d85b5_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="feedbackvote",
            unique_together={("feedback", "user")},
        ),
    ]
