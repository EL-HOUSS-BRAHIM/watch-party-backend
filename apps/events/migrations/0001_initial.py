# Generated by Django 5.0.14 on 2025-08-10 22:03

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        help_text="Physical or virtual location",
                        max_length=255,
                    ),
                ),
                (
                    "max_attendees",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Leave blank for unlimited attendees",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("require_approval", models.BooleanField(default=False)),
                (
                    "privacy",
                    models.CharField(
                        choices=[
                            ("public", "Public"),
                            ("private", "Private"),
                            ("friends_only", "Friends Only"),
                        ],
                        default="public",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("upcoming", "Upcoming"),
                            ("ongoing", "Ongoing"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="upcoming",
                        max_length=20,
                    ),
                ),
                ("banner_image", models.URLField(blank=True)),
                ("category", models.CharField(blank=True, max_length=100)),
                ("tags", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organizer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="organized_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-start_time"],
            },
        ),
        migrations.CreateModel(
            name="EventAttendee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("attending", "Attending"),
                            ("maybe", "Maybe"),
                            ("not_attending", "Not Attending"),
                            ("pending", "Pending Approval"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("rsvp_date", models.DateTimeField(auto_now_add=True)),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Optional notes from attendee"
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attendees",
                        to="events.event",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_attendances",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EventInvitation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("sent", "Sent"),
                            ("accepted", "Accepted"),
                            ("declined", "Declined"),
                            ("expired", "Expired"),
                        ],
                        default="sent",
                        max_length=20,
                    ),
                ),
                (
                    "message",
                    models.TextField(
                        blank=True, help_text="Personal message from inviter"
                    ),
                ),
                ("sent_at", models.DateTimeField(auto_now_add=True)),
                ("responded_at", models.DateTimeField(blank=True, null=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invitations",
                        to="events.event",
                    ),
                ),
                (
                    "invitee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_event_invitations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "inviter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_event_invitations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EventReminder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reminder_type",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("push", "Push Notification"),
                            ("sms", "SMS"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "minutes_before",
                    models.PositiveIntegerField(help_text="Minutes before event start"),
                ),
                ("is_sent", models.BooleanField(default=False)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reminders",
                        to="events.event",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_reminders",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["start_time"], name="events_even_start_t_c2d277_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(fields=["status"], name="events_even_status_5709b6_idx"),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["organizer"], name="events_even_organiz_266ef7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["privacy"], name="events_even_privacy_f67265_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="eventattendee",
            index=models.Index(
                fields=["event", "status"], name="events_even_event_i_3ca279_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="eventattendee",
            index=models.Index(
                fields=["user", "status"], name="events_even_user_id_461b08_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="eventattendee",
            unique_together={("event", "user")},
        ),
        migrations.AddIndex(
            model_name="eventinvitation",
            index=models.Index(
                fields=["invitee", "status"], name="events_even_invitee_63759d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="eventinvitation",
            index=models.Index(
                fields=["event", "status"], name="events_even_event_i_6e3418_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="eventinvitation",
            unique_together={("event", "invitee")},
        ),
        migrations.AddIndex(
            model_name="eventreminder",
            index=models.Index(
                fields=["event", "is_sent"], name="events_even_event_i_f05ce9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="eventreminder",
            index=models.Index(
                fields=["user", "is_sent"], name="events_even_user_id_9ef6ef_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="eventreminder",
            unique_together={("event", "user", "reminder_type", "minutes_before")},
        ),
    ]
