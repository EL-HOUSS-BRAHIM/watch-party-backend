# Generated by Django 5.0.14 on 2025-08-14 15:39

import django.contrib.postgres.indexes
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SearchAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("total_searches", models.PositiveIntegerField(default=0)),
                ("unique_users", models.PositiveIntegerField(default=0)),
                ("avg_results_per_search", models.FloatField(default=0.0)),
                ("avg_search_duration_ms", models.FloatField(default=0.0)),
                ("top_queries", models.JSONField(blank=True, default=list)),
                ("click_through_rate", models.FloatField(default=0.0)),
                ("zero_results_rate", models.FloatField(default=0.0)),
                (
                    "search_types_distribution",
                    models.JSONField(blank=True, default=dict),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "search_analytics",
                "indexes": [
                    models.Index(fields=["-date"], name="search_anal_date_0dc2c9_idx")
                ],
                "unique_together": {("date",)},
            },
        ),
        migrations.CreateModel(
            name="SearchFilter",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "filter_type",
                    models.CharField(
                        choices=[
                            ("date_range", "Date Range"),
                            ("category", "Category"),
                            ("user_type", "User Type"),
                            ("content_type", "Content Type"),
                            ("popularity", "Popularity"),
                            ("duration", "Duration"),
                            ("location", "Location"),
                            ("custom", "Custom Filter"),
                        ],
                        max_length=20,
                    ),
                ),
                ("display_name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("sort_order", models.PositiveIntegerField(default=0)),
                ("options", models.JSONField(blank=True, default=list)),
                ("default_value", models.CharField(blank=True, max_length=200)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "search_filters",
                "ordering": ["sort_order", "name"],
                "indexes": [
                    models.Index(
                        fields=["is_active", "sort_order"],
                        name="search_filt_is_acti_475cad_idx",
                    ),
                    models.Index(
                        fields=["filter_type"], name="search_filt_filter__ed19b1_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SearchSuggestion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("text", models.CharField(max_length=200)),
                (
                    "suggestion_type",
                    models.CharField(
                        choices=[
                            ("query", "Query Suggestion"),
                            ("hashtag", "Hashtag"),
                            ("user", "User"),
                            ("category", "Category"),
                            ("trending", "Trending Topic"),
                        ],
                        max_length=20,
                    ),
                ),
                ("popularity_score", models.FloatField(default=0.0)),
                ("click_count", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "search_suggestions",
                "indexes": [
                    models.Index(
                        fields=["suggestion_type", "-popularity_score"],
                        name="search_sugg_suggest_be303e_idx",
                    ),
                    models.Index(
                        fields=["is_active", "-click_count"],
                        name="search_sugg_is_acti_9cdb3c_idx",
                    ),
                    django.contrib.postgres.indexes.GinIndex(
                        fields=["text"], name="search_suggestions_text_gin"
                    ),
                ],
                "unique_together": {("text", "suggestion_type")},
            },
        ),
        migrations.CreateModel(
            name="TrendingQuery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("query", models.CharField(max_length=500, unique=True)),
                ("search_count", models.PositiveIntegerField(default=1)),
                ("unique_users", models.PositiveIntegerField(default=1)),
                ("period", models.CharField(default="daily", max_length=20)),
                ("date", models.DateField(default=django.utils.timezone.now)),
                ("last_updated", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "trending_queries",
                "indexes": [
                    models.Index(
                        fields=["period", "date", "-search_count"],
                        name="trending_qu_period_baff2c_idx",
                    ),
                    models.Index(
                        fields=["-search_count"], name="trending_qu_search__559cca_idx"
                    ),
                ],
                "unique_together": {("query", "period", "date")},
            },
        ),
        migrations.CreateModel(
            name="SavedSearch",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("query", models.CharField(max_length=500)),
                ("search_type", models.CharField(default="global", max_length=50)),
                ("filters", models.JSONField(blank=True, default=dict)),
                ("notification_enabled", models.BooleanField(default=False)),
                ("last_checked", models.DateTimeField(blank=True, null=True)),
                ("times_used", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="saved_searches",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "saved_searches",
                "indexes": [
                    models.Index(
                        fields=["user", "-created_at"],
                        name="saved_searc_user_id_fc38f3_idx",
                    ),
                    models.Index(
                        fields=["user", "notification_enabled"],
                        name="saved_searc_user_id_d5b87b_idx",
                    ),
                ],
                "unique_together": {("user", "name")},
            },
        ),
        migrations.CreateModel(
            name="SearchQuery",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("query", models.CharField(max_length=500)),
                ("search_type", models.CharField(default="global", max_length=50)),
                ("filters_applied", models.JSONField(blank=True, default=dict)),
                ("results_count", models.PositiveIntegerField(default=0)),
                ("clicked_result_id", models.CharField(blank=True, max_length=100)),
                ("clicked_result_type", models.CharField(blank=True, max_length=50)),
                ("session_id", models.CharField(blank=True, max_length=100)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                (
                    "search_duration_ms",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "search_queries",
                "indexes": [
                    models.Index(fields=["query"], name="search_quer_query_50e46f_idx"),
                    models.Index(
                        fields=["user", "-created_at"],
                        name="search_quer_user_id_486cee_idx",
                    ),
                    models.Index(
                        fields=["search_type", "-created_at"],
                        name="search_quer_search__6a9873_idx",
                    ),
                    models.Index(
                        fields=["-created_at"], name="search_quer_created_824a49_idx"
                    ),
                ],
            },
        ),
    ]
