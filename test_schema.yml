openapi: 3.0.3
info:
  title: Watch Party API
  version: 2.0.0
  description: "\n    **Watch Party Platform API Documentation**\n    \n    This is\
    \ a comprehensive API for the Watch Party platform that allows users to:\n   \
    \ - Create and join video watch parties\n    - Upload and manage videos\n    -\
    \ Chat in real-time during parties\n    - Manage user profiles and social features\n\
    \    - Access analytics and billing features\n    \n    ## Authentication\n  \
    \  Most endpoints require JWT authentication. Include the token in the Authorization\
    \ header:\n    ```\n    Authorization: Bearer <your_access_token>\n    ```\n \
    \   \n    ## Rate Limiting\n    API endpoints have rate limiting applied. Check\
    \ response headers for limit information.\n    \n    ## Pagination\n    List endpoints\
    \ use cursor-based pagination with `page` and `page_size` parameters.\n    "
paths:
  /:
    get:
      operationId: v2_root_retrieve
      description: API root endpoint
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: false
  /admin/analytics/:
    get:
      operationId: v2_admin_analytics_retrieve
      description: Get comprehensive analytics overview for admin dashboard
      tags:
      - admin
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /admin/broadcast/:
    post:
      operationId: v2_admin_broadcast_create
      description: Broadcast message to all users or specific user groups
      tags:
      - admin
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /admin/dashboard/:
    get:
      operationId: v2_admin_dashboard_retrieve
      description: Get comprehensive admin dashboard statistics
      summary: Admin Dashboard Stats
      tags:
      - admin
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminDashboardStats'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /admin/health/check/:
    get:
      operationId: v2_admin_health_check_retrieve
      description: Basic health check
      summary: HealthCheckView GET
      tags:
      - admin
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: false
  /admin/health/metrics/:
    get:
      operationId: v2_admin_health_metrics_retrieve
      description: Get system metrics in Prometheus format
      summary: MetricsView GET
      tags:
      - admin
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardAPIResponse'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /admin/health/status/:
    get:
      operationId: v2_admin_health_status_retrieve
      description: Get detailed system status
      summary: DetailedStatusView GET
      tags:
      - admin
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardAPIResponse'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /admin/moderation/:
    get:
      operationId: v2_admin_moderation_retrieve
      description: Get content moderation queue and tools
      tags:
      - admin
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /admin/notifications/send/:
    post:
      operationId: v2_admin_notifications_send_create
      description: Send notification to users or all users
      tags:
      - admin
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /admin/parties/:
    get:
      operationId: v2_admin_parties_retrieve
      description: Get paginated list of parties for admin management
      tags:
      - admin
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /admin/parties/{party_id}/delete/:
    delete:
      operationId: v2_admin_parties_delete_destroy
      description: Delete a party (admin only)
      parameters:
      - in: path
        name: party_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - admin
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /admin/reports/:
    get:
      operationId: v2_admin_reports_retrieve
      description: Get content reports for moderation
      tags:
      - admin
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /admin/system/health/:
    get:
      operationId: v2_admin_system_health_retrieve
      description: Get comprehensive system health metrics
      tags:
      - admin
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /admin/users/:
    get:
      operationId: v2_admin_users_retrieve
      description: Get paginated list of users for admin management
      tags:
      - admin
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /admin/users/{user_id}/suspend/:
    post:
      operationId: v2_admin_users_suspend_create
      description: Suspend a user account
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - admin
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /admin/users/{user_id}/unsuspend/:
    post:
      operationId: v2_admin_users_unsuspend_create
      description: Unsuspend a user account
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - admin
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /admin/users/bulk-actions/:
    post:
      operationId: v2_admin_users_bulk_actions_create
      description: Perform bulk actions on users
      tags:
      - admin
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /admin/users/export/:
    get:
      operationId: v2_admin_users_export_retrieve
      description: Export users to CSV
      tags:
      - admin
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/:
    get:
      operationId: v2_analytics_retrieve
      description: System-wide analytics for admin users
      summary: AdminAnalyticsView GET
      tags:
      - analytics
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/ab-testing/:
    get:
      operationId: v2_analytics_ab_testing_retrieve
      description: Get A/B test results
      summary: A_BTestingView GET
      tags:
      - analytics
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    post:
      operationId: v2_analytics_ab_testing_create
      description: Create new A/B test
      summary: A_BTestingView POST
      tags:
      - analytics
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/admin/analytics/:
    get:
      operationId: v2_analytics_admin_analytics_retrieve
      description: System-wide analytics for admin users
      summary: AdminAnalyticsView GET
      tags:
      - analytics
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/advanced/query/:
    post:
      operationId: v2_analytics_advanced_query_create
      description: Execute custom analytics query
      summary: AdvancedAnalyticsView POST
      tags:
      - analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/comparative/:
    get:
      operationId: v2_analytics_comparative_retrieve
      description: Get comparative analytics between different time periods
      tags:
      - analytics
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/content/:
    get:
      operationId: v2_analytics_content_retrieve
      description: Get content performance analytics
      tags:
      - analytics
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/content-performance/:
    get:
      operationId: v2_analytics_content_performance_retrieve
      description: Get content performance analytics
      tags:
      - analytics
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/dashboard/:
    get:
      operationId: v2_analytics_dashboard_retrieve
      description: Get dashboard statistics for authenticated user
      tags:
      - analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/dashboard/realtime/:
    get:
      operationId: v2_analytics_dashboard_realtime_retrieve
      description: Get real-time dashboard data
      summary: RealTimeDashboardView GET
      tags:
      - analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/events/:
    post:
      operationId: v2_analytics_events_create
      description: Track an analytics event
      tags:
      - analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/export/:
    post:
      operationId: v2_analytics_export_create
      description: Export analytics data
      summary: ExportAnalyticsView POST
      tags:
      - analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/party-stats/{party_id}/:
    get:
      operationId: v2_analytics_party_stats_retrieve
      description: Get analytics for a specific party
      parameters:
      - in: path
        name: party_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyAnalytics'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/party/{party_id}/:
    get:
      operationId: v2_analytics_party_retrieve
      description: Get analytics for a specific party
      parameters:
      - in: path
        name: party_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/personal/:
    get:
      operationId: v2_analytics_personal_retrieve
      description: Get personal analytics for the authenticated user
      tags:
      - analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/platform-overview/:
    get:
      operationId: v2_analytics_platform_overview_retrieve
      description: Get comprehensive platform analytics overview
      tags:
      - analytics
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformOverview'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/predictive/:
    get:
      operationId: v2_analytics_predictive_retrieve
      description: Get predictive analytics insights
      summary: PredictiveAnalyticsView GET
      tags:
      - analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/predictive/forecast/:
    get:
      operationId: v2_analytics_predictive_forecast_retrieve
      description: Get predictive analytics and forecasting
      tags:
      - analytics
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/real-time/:
    get:
      operationId: v2_analytics_real_time_retrieve
      description: Get real-time platform analytics
      tags:
      - analytics
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/real-time/dashboard/:
    get:
      operationId: v2_analytics_real_time_dashboard_retrieve
      description: Get real-time analytics data for dashboard
      tags:
      - analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/retention/:
    get:
      operationId: v2_analytics_retention_retrieve
      description: Get user retention and churn analysis
      tags:
      - analytics
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/revenue/:
    get:
      operationId: v2_analytics_revenue_retrieve
      description: Get revenue and subscription analytics
      tags:
      - analytics
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/revenue-advanced/:
    get:
      operationId: v2_analytics_revenue_advanced_retrieve
      description: Get revenue and monetization analytics
      tags:
      - analytics
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/system/:
    get:
      operationId: v2_analytics_system_retrieve
      description: Get system-wide analytics (admin only)
      tags:
      - analytics
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/system/performance/:
    get:
      operationId: v2_analytics_system_performance_retrieve
      description: Get system performance metrics
      tags:
      - analytics
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/user/:
    get:
      operationId: v2_analytics_user_retrieve
      description: Get detailed user analytics
      tags:
      - analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/user-behavior/:
    get:
      operationId: v2_analytics_user_behavior_retrieve
      description: Get detailed user behavior analytics
      tags:
      - analytics
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/user-behavior/detailed/:
    get:
      operationId: v2_analytics_user_behavior_detailed_retrieve
      description: Analyze detailed user behavior patterns
      tags:
      - analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/user-stats/:
    get:
      operationId: v2_analytics_user_stats_retrieve
      description: Get personal analytics for authenticated user
      tags:
      - analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAnalytics'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/video/{video_id}/:
    get:
      operationId: v2_analytics_video_retrieve
      description: Get analytics for a specific video
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /analytics/video/{video_id}/analytics/:
    get:
      operationId: v2_analytics_video_analytics_retrieve
      description: Get detailed analytics for a specific video
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /auth/2fa/disable/:
    post:
      operationId: v2_auth_2fa_disable_create
      description: Disable 2FA with token verification
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TwoFactorDisableRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TwoFactorDisableRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TwoFactorDisableRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwoFactorDisableRequest'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /auth/2fa/setup/:
    post:
      operationId: v2_auth_2fa_setup_create
      description: Generate 2FA secret and QR code
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /auth/2fa/verify/:
    post:
      operationId: v2_auth_2fa_verify_create
      description: Verify 2FA token to enable 2FA
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TwoFactorVerifyRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TwoFactorVerifyRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TwoFactorVerifyRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwoFactorVerifyRequest'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /auth/change-password/:
    post:
      operationId: v2_auth_change_password_create
      description: Password change endpoint
      summary: PasswordChangeView POST
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /auth/forgot-password/:
    post:
      operationId: v2_auth_forgot_password_create
      description: Forgot password endpoint
      summary: ForgotPasswordView POST
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequest'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: false
  /auth/google-drive/auth/:
    get:
      operationId: v2_auth_google_drive_auth_retrieve
      description: Get Google OAuth2 authorization URL
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleDriveAuthRequest'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    post:
      operationId: v2_auth_google_drive_auth_create
      description: Handle Google OAuth2 callback
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleDriveAuthRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoogleDriveAuthRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoogleDriveAuthRequestRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleDriveAuthRequest'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /auth/google-drive/disconnect/:
    post:
      operationId: v2_auth_google_drive_disconnect_create
      description: Disconnect user's Google Drive
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /auth/google-drive/status/:
    get:
      operationId: v2_auth_google_drive_status_retrieve
      description: Get Google Drive connection status
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /auth/login/:
    post:
      operationId: v2_auth_login_create
      description: User login endpoint
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      x-authentication:
        types: []
        required: false
  /auth/logout/:
    post:
      operationId: v2_auth_logout_create
      description: User logout endpoint
      summary: LogoutView POST
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /auth/profile/:
    get:
      operationId: v2_auth_profile_retrieve
      description: User profile view
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileDetail'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    put:
      operationId: v2_auth_profile_update
      description: User profile view
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileDetailRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileDetail'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    patch:
      operationId: v2_auth_profile_partial_update
      description: User profile view
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileDetailRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileDetail'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /auth/refresh/:
    post:
      operationId: v2_auth_refresh_create
      description: Refresh access token with consistent response format
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      x-authentication:
        types: []
        required: true
  /auth/register/:
    post:
      operationId: v2_auth_register_create
      description: User registration endpoint
      summary: RegisterView POST
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: false
  /auth/resend-verification/:
    post:
      operationId: v2_auth_resend_verification_create
      description: Resend verification email endpoint
      summary: ResendVerificationView POST
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /auth/reset-password/:
    post:
      operationId: v2_auth_reset_password_create
      description: Reset password endpoint
      summary: ResetPasswordView POST
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: false
  /auth/sessions/:
    get:
      operationId: v2_auth_sessions_retrieve
      description: List active sessions for user
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    delete:
      operationId: v2_auth_sessions_destroy
      description: Revoke a specific session or all sessions
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /auth/sessions/{session_id}/:
    get:
      operationId: v2_auth_sessions_retrieve_2
      description: List active sessions for user
      parameters:
      - in: path
        name: session_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    delete:
      operationId: v2_auth_sessions_destroy_2
      description: Revoke a specific session or all sessions
      parameters:
      - in: path
        name: session_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /auth/social/{provider}/:
    get:
      operationId: v2_auth_social_retrieve
      description: Generate OAuth redirect URL for social providers
      parameters:
      - in: path
        name: provider
        schema:
          type: string
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: false
  /auth/social/github/:
    post:
      operationId: v2_auth_social_github_create
      description: Authenticate user with GitHub OAuth token
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitHubAuthRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GitHubAuthRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GitHubAuthRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitHubAuthRequest'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: false
  /auth/social/google/:
    post:
      operationId: v2_auth_social_google_create
      description: Authenticate user with Google OAuth token
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAuthRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoogleAuthRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoogleAuthRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAuthRequest'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: false
  /auth/verify-email/:
    post:
      operationId: v2_auth_verify_email_create
      description: Email verification endpoint
      summary: VerifyEmailView POST
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailVerificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailVerificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailVerificationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailVerification'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: false
  /chat/{party_id}/messages/:
    get:
      operationId: v2_chat_messages_list
      description: Get chat history for a party
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: party_id
        schema:
          type: string
          format: uuid
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - chat
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChatMessageList'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /chat/{party_id}/messages/send/:
    post:
      operationId: v2_chat_messages_send_create
      description: Send a message to chat room
      parameters:
      - in: path
        name: party_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMessageCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatMessageCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatMessageCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessageCreate'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /chat/{room_id}/active-users/:
    get:
      operationId: v2_chat_active_users_retrieve
      description: Get list of active users in chat room
      parameters:
      - in: path
        name: room_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - chat
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /chat/{room_id}/ban/:
    post:
      operationId: v2_chat_ban_create
      description: Ban user from chat room
      parameters:
      - in: path
        name: room_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatBanRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatBanRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatBanRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatBan'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /chat/{room_id}/join/:
    post:
      operationId: v2_chat_join_create
      description: Join a chat room
      parameters:
      - in: path
        name: room_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - chat
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /chat/{room_id}/leave/:
    post:
      operationId: v2_chat_leave_create
      description: Leave a chat room
      parameters:
      - in: path
        name: room_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - chat
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /chat/{room_id}/moderate/:
    post:
      operationId: v2_chat_moderate_create_2
      description: Moderate chat messages and users
      parameters:
      - in: path
        name: room_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModerateChatRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ModerateChatRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ModerateChatRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModerateChat'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /chat/{room_id}/moderation-log/:
    get:
      operationId: v2_chat_moderation_log_list
      description: Get moderation log for a chat room
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: room_id
        schema:
          type: string
          format: uuid
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - chat
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChatModerationLogList'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /chat/{room_id}/settings/:
    get:
      operationId: v2_chat_settings_retrieve
      description: Update chat room settings
      parameters:
      - in: path
        name: room_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - chat
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    put:
      operationId: v2_chat_settings_update
      description: Update chat room settings
      parameters:
      - in: path
        name: room_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRoomRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatRoomRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatRoomRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    patch:
      operationId: v2_chat_settings_partial_update
      description: Update chat room settings
      parameters:
      - in: path
        name: room_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChatRoomRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChatRoomRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChatRoomRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /chat/{room_id}/stats/:
    get:
      operationId: v2_chat_stats_retrieve
      description: Get chat room statistics
      parameters:
      - in: path
        name: room_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - chat
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoomStats'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /chat/{room_id}/unban/:
    post:
      operationId: v2_chat_unban_create
      description: Unban a user from chat
      parameters:
      - in: path
        name: room_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnbanUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UnbanUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UnbanUserRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnbanUser'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /chat/history/{party_id}/:
    get:
      operationId: v2_chat_history_list
      description: Get chat history for a party
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: party_id
        schema:
          type: string
          format: uuid
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - chat
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChatMessageList'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /chat/moderate/:
    post:
      operationId: v2_chat_moderate_create
      description: Moderate chat messages and users
      tags:
      - chat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModerateChatRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ModerateChatRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ModerateChatRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModerateChat'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /dashboard/activities/:
    get:
      operationId: v2_dashboard_activities_retrieve
      description: Recent activities endpoint
      tags:
      - dashboard
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /dashboard/stats/:
    get:
      operationId: v2_dashboard_stats_retrieve
      description: Dashboard statistics endpoint
      tags:
      - dashboard
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /events/:
    get:
      operationId: v2_events_list
      description: List all events or create a new event
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventListList'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    post:
      operationId: v2_events_create
      description: List all events or create a new event
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventCreateUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCreateUpdate'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /events/{id}/:
    get:
      operationId: v2_events_retrieve
      description: Retrieve, update or delete an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    put:
      operationId: v2_events_update
      description: Retrieve, update or delete an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventCreateUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCreateUpdate'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    patch:
      operationId: v2_events_partial_update
      description: Retrieve, update or delete an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEventCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEventCreateUpdateRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCreateUpdate'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    delete:
      operationId: v2_events_destroy
      description: Retrieve, update or delete an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /events/{id}/attendees/:
    get:
      operationId: v2_events_attendees_list
      description: List event attendees
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventAttendeeList'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /events/{id}/invitations/:
    get:
      operationId: v2_events_invitations_list
      description: List and create event invitations
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventInvitationList'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    post:
      operationId: v2_events_invitations_create
      description: List and create event invitations
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventInvitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventInvitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventInvitationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventInvitation'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /events/{id}/invitations/{invitation_id}/respond/:
    post:
      operationId: v2_events_invitations_respond_create
      description: Respond to an event invitation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: invitation_id
        schema:
          type: integer
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /events/{id}/join/:
    post:
      operationId: v2_events_join_create
      description: Join an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /events/{id}/leave/:
    post:
      operationId: v2_events_leave_create
      description: Leave an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /events/{id}/rsvp/:
    post:
      operationId: v2_events_rsvp_create
      description: RSVP to an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /events/attending/:
    get:
      operationId: v2_events_attending_list
      description: List events the authenticated user is attending
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventListList'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /events/my/:
    get:
      operationId: v2_events_my_list
      description: List events created by the authenticated user
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventListList'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /events/search/:
    get:
      operationId: v2_events_search_list
      description: Advanced event search
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventListList'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /events/upcoming/:
    get:
      operationId: v2_events_upcoming_list
      description: List upcoming events for the authenticated user
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventListList'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /health/:
    get:
      operationId: v2_health_retrieve
      description: Simple health check endpoint
      tags:
      - health
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: false
  /integrations/connections/:
    get:
      operationId: v2_integrations_connections_retrieve
      description: List user's integration connections
      tags:
      - integrations
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /integrations/connections/{connection_id}/disconnect/:
    delete:
      operationId: v2_integrations_connections_disconnect_destroy
      description: Disconnect a service integration
      parameters:
      - in: path
        name: connection_id
        schema:
          type: integer
        required: true
      tags:
      - integrations
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /integrations/google-drive/auth-url/:
    get:
      operationId: v2_integrations_google_drive_auth_url_retrieve
      description: Get Google Drive OAuth authorization URL
      tags:
      - integrations
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /integrations/google-drive/files/:
    get:
      operationId: v2_integrations_google_drive_files_retrieve
      description: List files from Google Drive
      tags:
      - integrations
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /integrations/google-drive/files/{file_id}/streaming-url/:
    get:
      operationId: v2_integrations_google_drive_files_streaming_url_retrieve
      description: Get streaming URL for Google Drive file
      parameters:
      - in: path
        name: file_id
        schema:
          type: string
        required: true
      tags:
      - integrations
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /integrations/google-drive/oauth-callback/:
    get:
      operationId: v2_integrations_google_drive_oauth_callback_retrieve
      description: Handle Google Drive OAuth callback
      tags:
      - integrations
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /integrations/health/:
    get:
      operationId: v2_integrations_health_retrieve
      description: Public health check endpoint for integrations
      tags:
      - integrations
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: false
  /integrations/management/:
    post:
      operationId: v2_integrations_management_create
      description: Enable/disable integrations or update their configuration
      summary: Update integration configuration
      tags:
      - Admin
      - Integrations
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '403':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '500':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /integrations/oauth/{provider}/auth-url/:
    get:
      operationId: v2_integrations_oauth_auth_url_retrieve
      description: Get OAuth authorization URL for social provider
      parameters:
      - in: path
        name: provider
        schema:
          type: string
        required: true
      tags:
      - integrations
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /integrations/oauth/{provider}/callback/:
    get:
      operationId: v2_integrations_oauth_callback_retrieve
      description: Handle OAuth callback for social provider
      parameters:
      - in: path
        name: provider
        schema:
          type: string
        required: true
      tags:
      - integrations
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /integrations/s3/files/{file_key}/streaming-url/:
    get:
      operationId: v2_integrations_s3_files_streaming_url_retrieve
      description: Get streaming URL for S3 file
      parameters:
      - in: path
        name: file_key
        schema:
          type: string
        required: true
      tags:
      - integrations
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /integrations/s3/presigned-upload/:
    post:
      operationId: v2_integrations_s3_presigned_upload_create
      description: Get presigned URL for S3 upload
      tags:
      - integrations
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /integrations/s3/upload/:
    post:
      operationId: v2_integrations_s3_upload_create
      description: Upload file to S3
      tags:
      - integrations
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /integrations/status/:
    get:
      operationId: v2_integrations_status_retrieve
      description: Check the status and health of all registered integrations
      summary: Get integration status
      tags:
      - Admin
      - Integrations
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '403':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '500':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /integrations/test/:
    post:
      operationId: v2_integrations_test_create
      description: Test a specific integration
      tags:
      - integrations
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /integrations/types/:
    get:
      operationId: v2_integrations_types_retrieve
      description: Get available integration types
      tags:
      - integrations
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /interactive/parties/{party_id}/analytics/:
    get:
      operationId: v2_interactive_parties_analytics_retrieve
      description: Get analytics for interactive features usage in a party
      summary: Get interactive features analytics
      parameters:
      - in: path
        name: party_id
        schema:
          type: integer
        required: true
      tags:
      - interactive
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Analytics retrieved successfully
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /interactive/parties/{party_id}/polls/:
    get:
      operationId: v2_interactive_parties_polls_retrieve
      description: Get interactive polls for a party
      summary: Get party polls
      parameters:
      - in: query
        name: active_only
        schema:
          type: boolean
        description: Get only active polls
      - in: path
        name: party_id
        schema:
          type: integer
        required: true
      tags:
      - interactive
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Polls retrieved successfully
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /interactive/parties/{party_id}/polls/create/:
    post:
      operationId: v2_interactive_parties_polls_create_create
      description: Create a new interactive poll for a party
      summary: Create interactive poll
      parameters:
      - in: path
        name: party_id
        schema:
          type: integer
        required: true
      tags:
      - interactive
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InteractivePollRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InteractivePollRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InteractivePollRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          description: Poll created successfully
        '400':
          description: Invalid poll data
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /interactive/parties/{party_id}/reactions/:
    get:
      operationId: v2_interactive_parties_reactions_retrieve
      description: Retrieve recent live reactions for a specific party
      summary: Get live reactions for a party
      parameters:
      - in: path
        name: party_id
        schema:
          type: integer
        required: true
      - in: query
        name: since
        schema:
          type: string
          format: date-time
        description: Get reactions since this timestamp
      - in: query
        name: video_timestamp
        schema:
          type: number
          format: float
        description: Get reactions around this video time
      tags:
      - interactive
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Live reactions retrieved successfully
        '404':
          description: Party not found
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /interactive/parties/{party_id}/reactions/create/:
    post:
      operationId: v2_interactive_parties_reactions_create_create
      description: Create a new live reaction on video
      summary: Create live reaction
      parameters:
      - in: path
        name: party_id
        schema:
          type: integer
        required: true
      tags:
      - interactive
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveReactionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LiveReactionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LiveReactionRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          description: Reaction created successfully
        '400':
          description: Invalid reaction data
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /interactive/parties/{party_id}/screen-shares/:
    get:
      operationId: v2_interactive_parties_screen_shares_retrieve
      description: Get currently active screen sharing sessions for a party
      summary: Get active screen shares
      parameters:
      - in: path
        name: party_id
        schema:
          type: integer
        required: true
      tags:
      - interactive
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Screen shares retrieved
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /interactive/parties/{party_id}/voice-chat/:
    get:
      operationId: v2_interactive_parties_voice_chat_retrieve
      description: Get voice chat room information and participants
      summary: Get voice chat room info
      parameters:
      - in: path
        name: party_id
        schema:
          type: integer
        required: true
      tags:
      - interactive
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Voice chat info retrieved
        '404':
          description: Voice chat room not found
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /interactive/parties/{party_id}/voice-chat/manage/:
    post:
      operationId: v2_interactive_parties_voice_chat_manage_create
      description: Create or update voice chat room settings
      summary: Create or update voice chat room
      parameters:
      - in: path
        name: party_id
        schema:
          type: integer
        required: true
      tags:
      - interactive
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceChatRoomRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VoiceChatRoomRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VoiceChatRoomRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Voice chat room updated
        '201':
          description: Voice chat room created
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    put:
      operationId: v2_interactive_parties_voice_chat_manage_update
      description: Create or update voice chat room settings
      summary: Create or update voice chat room
      parameters:
      - in: path
        name: party_id
        schema:
          type: integer
        required: true
      tags:
      - interactive
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceChatRoomRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VoiceChatRoomRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VoiceChatRoomRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Voice chat room updated
        '201':
          description: Voice chat room created
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /interactive/polls/{poll_id}/publish/:
    post:
      operationId: v2_interactive_polls_publish_create
      description: Publish an interactive poll to make it active
      summary: Publish poll
      parameters:
      - in: path
        name: poll_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - interactive
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Poll published successfully
        '404':
          description: Poll not found
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /interactive/polls/{poll_id}/respond/:
    post:
      operationId: v2_interactive_polls_respond_create
      description: Submit response to an interactive poll
      summary: Submit poll response
      parameters:
      - in: path
        name: poll_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - interactive
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PollResponseRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PollResponseRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PollResponseRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          description: Response submitted successfully
        '400':
          description: Invalid response or poll expired
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /interactive/screen-shares/{share_id}/annotations/:
    get:
      operationId: v2_interactive_screen_shares_annotations_retrieve
      description: Get annotations for a screen sharing session
      summary: Get screen share annotations
      parameters:
      - in: path
        name: share_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - interactive
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Annotations retrieved successfully
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /interactive/screen-shares/{share_id}/update/:
    put:
      operationId: v2_interactive_screen_shares_update_update
      description: Update screen sharing session settings
      summary: Update screen share
      parameters:
      - in: path
        name: share_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - interactive
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScreenShareRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScreenShareRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScreenShareRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: Screen share updated
        '404':
          description: Screen share not found
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /messaging/conversations/:
    get:
      operationId: v2_messaging_conversations_retrieve
      description: Get user's conversations
      summary: ConversationsView GET
      tags:
      - messaging
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    post:
      operationId: v2_messaging_conversations_create
      description: Create a new conversation
      summary: ConversationsView POST
      tags:
      - messaging
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /messaging/conversations/{conversation_id}/messages/:
    get:
      operationId: v2_messaging_conversations_messages_retrieve
      description: Get messages from a conversation
      summary: MessagesView GET
      parameters:
      - in: path
        name: conversation_id
        schema:
          type: integer
        required: true
      tags:
      - messaging
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    post:
      operationId: v2_messaging_conversations_messages_create
      description: Send a message to a conversation
      summary: MessagesView POST
      parameters:
      - in: path
        name: conversation_id
        schema:
          type: integer
        required: true
      tags:
      - messaging
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /mobile/analytics/track/:
    post:
      operationId: v2_mobile_analytics_track_create
      description: Track mobile app analytics events
      tags:
      - mobile
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /mobile/app-info/:
    get:
      operationId: v2_mobile_app_info_retrieve
      description: Get mobile app information and update notifications
      tags:
      - mobile
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /mobile/config/:
    get:
      operationId: v2_mobile_config_retrieve
      description: Retrieve configuration settings optimized for mobile app
      summary: Get mobile app configuration
      tags:
      - Mobile
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '403':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '500':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /mobile/crash/report/:
    post:
      operationId: v2_mobile_crash_report_create
      description: Report mobile app crash
      tags:
      - mobile
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /mobile/device/register/:
    post:
      operationId: v2_mobile_device_register_create
      description: Register a mobile device
      tags:
      - mobile
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /mobile/home/:
    get:
      operationId: v2_mobile_home_retrieve
      description: Retrieve optimized home screen data for mobile app including parties,
        videos, and activities
      summary: Get mobile home screen data
      tags:
      - Mobile
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '403':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '500':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /mobile/push-token/:
    post:
      operationId: v2_mobile_push_token_create
      description: Update user's push notification token
      tags:
      - mobile
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /mobile/sync/:
    post:
      operationId: v2_mobile_sync_create
      description: Full synchronization endpoint for mobile app data
      summary: Synchronize mobile data
      tags:
      - Mobile
      - Sync
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '403':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '500':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /mobile/sync/offline/:
    post:
      operationId: v2_mobile_sync_offline_create
      description: Sync data for offline usage on mobile devices
      summary: Sync offline data
      tags:
      - Mobile
      - Sync
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '403':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '500':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /moderation/admin/dashboard/:
    get:
      operationId: v2_moderation_admin_dashboard_retrieve
      description: Get comprehensive moderation dashboard data
      tags:
      - moderation
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /moderation/admin/queue/:
    get:
      operationId: v2_moderation_admin_queue_list
      description: Admin view for moderation queue
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - moderation
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedModerationQueueList'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /moderation/admin/reports/{report_id}/actions/:
    get:
      operationId: v2_moderation_admin_reports_actions_list
      description: List actions taken on a specific report
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: report_id
        schema:
          type: string
          format: uuid
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - moderation
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReportActionList'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /moderation/admin/reports/{report_id}/assign/:
    post:
      operationId: v2_moderation_admin_reports_assign_create
      description: Assign report to moderator
      parameters:
      - in: path
        name: report_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - moderation
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /moderation/admin/reports/{report_id}/dismiss/:
    post:
      operationId: v2_moderation_admin_reports_dismiss_create
      description: Dismiss a content report
      parameters:
      - in: path
        name: report_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - moderation
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /moderation/admin/reports/{report_id}/resolve/:
    post:
      operationId: v2_moderation_admin_reports_resolve_create
      description: Resolve a content report
      parameters:
      - in: path
        name: report_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - moderation
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /moderation/admin/reports/bulk-action/:
    post:
      operationId: v2_moderation_admin_reports_bulk_action_create
      description: Handle bulk actions on multiple reports
      tags:
      - moderation
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /moderation/admin/stats/:
    get:
      operationId: v2_moderation_admin_stats_retrieve
      description: Get moderation statistics
      tags:
      - moderation
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /moderation/content-types/:
    get:
      operationId: v2_moderation_content_types_retrieve
      description: Get available content types for reporting
      tags:
      - moderation
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /moderation/report-types/:
    get:
      operationId: v2_moderation_report_types_retrieve
      description: Get available report types
      tags:
      - moderation
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /moderation/reports/:
    get:
      operationId: v2_moderation_reports_list
      description: List user's reports or create new report
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - moderation
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContentReportList'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    post:
      operationId: v2_moderation_reports_create
      description: List user's reports or create new report
      tags:
      - moderation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentReportCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContentReportCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContentReportCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentReportCreate'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /moderation/reports/{id}/:
    get:
      operationId: v2_moderation_reports_retrieve
      description: Get or update specific content report
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - moderation
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentReport'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    put:
      operationId: v2_moderation_reports_update
      description: Get or update specific content report
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - moderation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentReportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContentReportRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContentReportRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentReport'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    patch:
      operationId: v2_moderation_reports_partial_update
      description: Get or update specific content report
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - moderation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContentReportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedContentReportRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedContentReportRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentReport'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /notifications/:
    get:
      operationId: v2_notifications_list
      description: Get list of notifications for authenticated user
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationList'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /notifications/{id}/:
    get:
      operationId: v2_notifications_retrieve
      description: Get details of a specific notification
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /notifications/{id}/mark-read/:
    post:
      operationId: v2_notifications_mark_read_create
      description: Mark a single notification as read
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /notifications/bulk/send/:
    post:
      operationId: v2_notifications_bulk_send_create
      description: Send notifications in bulk
      tags:
      - notifications
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /notifications/channels/:
    get:
      operationId: v2_notifications_channels_list
      description: List notification channels (Admin only)
      summary: NotificationChannelListView GET
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - notifications
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /notifications/cleanup/:
    post:
      operationId: v2_notifications_cleanup_create
      description: Clean up old notifications
      tags:
      - notifications
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /notifications/clear-all/:
    post:
      operationId: v2_notifications_clear_all_create
      description: Clear all notifications for the current user
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /notifications/delivery-stats/:
    get:
      operationId: v2_notifications_delivery_stats_retrieve
      description: Get notification delivery statistics
      tags:
      - notifications
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /notifications/mark-all-read/:
    post:
      operationId: v2_notifications_mark_all_read_create
      description: Mark all notifications as read for the current user
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /notifications/preferences/:
    get:
      operationId: v2_notifications_preferences_retrieve
      description: Get and update user notification preferences
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationPreferences'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    put:
      operationId: v2_notifications_preferences_update
      description: Get and update user notification preferences
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationPreferencesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationPreferencesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationPreferencesRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationPreferences'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    patch:
      operationId: v2_notifications_preferences_partial_update
      description: Get and update user notification preferences
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotificationPreferencesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotificationPreferencesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotificationPreferencesRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationPreferences'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /notifications/preferences/update/:
    post:
      operationId: v2_notifications_preferences_update_create
      description: Update user notification preferences
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /notifications/push/broadcast/:
    post:
      operationId: v2_notifications_push_broadcast_create
      description: Send broadcast push notification to all users
      tags:
      - notifications
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /notifications/push/test/:
    post:
      operationId: v2_notifications_push_test_create
      description: Send a test push notification to the user
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /notifications/push/token/remove/:
    post:
      operationId: v2_notifications_push_token_remove_create
      description: Remove user's push notification token
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /notifications/push/token/update/:
    post:
      operationId: v2_notifications_push_token_update_create
      description: Update user's push notification token
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /notifications/stats/:
    get:
      operationId: v2_notifications_stats_retrieve
      description: Get notification statistics
      tags:
      - notifications
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /notifications/templates/:
    get:
      operationId: v2_notifications_templates_list
      description: List and create notification templates (Admin only)
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - notifications
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationTemplateList'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    post:
      operationId: v2_notifications_templates_create
      description: List and create notification templates (Admin only)
      tags:
      - notifications
      - Admin Only
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationTemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationTemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationTemplateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTemplate'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /notifications/templates/{id}/:
    get:
      operationId: v2_notifications_templates_retrieve
      description: Retrieve, update, and delete notification templates (Admin only)
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - notifications
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTemplate'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    put:
      operationId: v2_notifications_templates_update
      description: Retrieve, update, and delete notification templates (Admin only)
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - notifications
      - Admin Only
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationTemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationTemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationTemplateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTemplate'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    patch:
      operationId: v2_notifications_templates_partial_update
      description: Retrieve, update, and delete notification templates (Admin only)
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - notifications
      - Admin Only
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotificationTemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotificationTemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotificationTemplateRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTemplate'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    delete:
      operationId: v2_notifications_templates_destroy
      description: Retrieve, update, and delete notification templates (Admin only)
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - notifications
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/:
    get:
      operationId: v2_parties_list
      description: Watch Party CRUD operations
      parameters:
      - in: query
        name: host
        schema:
          type: string
          format: uuid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - cancelled
          - ended
          - live
          - paused
          - scheduled
        description: |-
          * `scheduled` - Scheduled
          * `live` - Live
          * `paused` - Paused
          * `ended` - Ended
          * `cancelled` - Cancelled
      - in: query
        name: visibility
        schema:
          type: string
          enum:
          - friends
          - private
          - public
        description: |-
          * `public` - Public
          * `friends` - Friends Only
          * `private` - Private
      tags:
      - parties
      - Watch Party
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWatchPartyList'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    post:
      operationId: v2_parties_create
      description: Watch Party CRUD operations
      tags:
      - parties
      - Watch Party
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatchPartyCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WatchPartyCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WatchPartyCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchPartyCreate'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/{party_id}/analytics/:
    get:
      operationId: v2_parties_analytics_retrieve
      description: Get detailed analytics for party (host only)
      parameters:
      - in: path
        name: party_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - parties
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/{party_id}/generate-invite/:
    post:
      operationId: v2_parties_generate_invite_create
      description: Generate or regenerate invite code for party
      parameters:
      - in: path
        name: party_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - parties
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/{party_id}/update-analytics/:
    post:
      operationId: v2_parties_update_analytics_create
      description: Update party analytics (for real-time tracking)
      parameters:
      - in: path
        name: party_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - parties
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/{id}/:
    get:
      operationId: v2_parties_retrieve
      description: Watch Party CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Watch Party.
        required: true
      tags:
      - parties
      - Watch Party
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchPartyDetail'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    put:
      operationId: v2_parties_update
      description: Watch Party CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Watch Party.
        required: true
      tags:
      - parties
      - Watch Party
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatchPartyUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WatchPartyUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WatchPartyUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchPartyUpdate'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    patch:
      operationId: v2_parties_partial_update
      description: Watch Party CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Watch Party.
        required: true
      tags:
      - parties
      - Watch Party
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWatchPartyUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWatchPartyUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWatchPartyUpdateRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchPartyUpdate'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    delete:
      operationId: v2_parties_destroy
      description: Watch Party CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Watch Party.
        required: true
      tags:
      - parties
      - Watch Party
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/{id}/chat/:
    get:
      operationId: v2_parties_chat_retrieve
      description: Get chat messages or send a new message
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Watch Party.
        required: true
      tags:
      - parties
      - Watch Party
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchParty'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    post:
      operationId: v2_parties_chat_create
      description: Get chat messages or send a new message
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Watch Party.
        required: true
      tags:
      - parties
      - Watch Party
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatchPartyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WatchPartyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WatchPartyRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchParty'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/{id}/control/:
    post:
      operationId: v2_parties_control_create
      description: Control video playback (host and moderators only)
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Watch Party.
        required: true
      tags:
      - parties
      - Watch Party
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatchPartyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WatchPartyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WatchPartyRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchParty'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/{id}/invite/:
    post:
      operationId: v2_parties_invite_create
      description: Invite users to the party
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Watch Party.
        required: true
      tags:
      - parties
      - Watch Party
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatchPartyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WatchPartyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WatchPartyRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchParty'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/{id}/join/:
    post:
      operationId: v2_parties_join_create
      description: Join a watch party
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Watch Party.
        required: true
      tags:
      - parties
      - Watch Party
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatchPartyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WatchPartyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WatchPartyRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchParty'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/{id}/leave/:
    post:
      operationId: v2_parties_leave_create
      description: Leave a watch party
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Watch Party.
        required: true
      tags:
      - parties
      - Watch Party
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatchPartyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WatchPartyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WatchPartyRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchParty'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/{id}/participants/:
    get:
      operationId: v2_parties_participants_retrieve
      description: Get party participants
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Watch Party.
        required: true
      tags:
      - parties
      - Watch Party
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchParty'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/{id}/react/:
    post:
      operationId: v2_parties_react_create
      description: Add a reaction to the party
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Watch Party.
        required: true
      tags:
      - parties
      - Watch Party
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatchPartyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WatchPartyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WatchPartyRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchParty'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/{id}/select_gdrive_movie/:
    post:
      operationId: v2_parties_select_gdrive_movie_create
      description: Select a movie from Google Drive for the party
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Watch Party.
        required: true
      tags:
      - parties
      - Watch Party
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatchPartyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WatchPartyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WatchPartyRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchParty'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/{id}/start/:
    post:
      operationId: v2_parties_start_create
      description: Start the watch party (host only)
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Watch Party.
        required: true
      tags:
      - parties
      - Watch Party
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatchPartyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WatchPartyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WatchPartyRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchParty'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/{id}/sync_state/:
    get:
      operationId: v2_parties_sync_state_retrieve
      description: Get current sync state of the party
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Watch Party.
        required: true
      tags:
      - parties
      - Watch Party
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchParty'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/invitations/:
    get:
      operationId: v2_parties_invitations_list
      description: Party invitation management
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - parties
      - Party Invitation
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPartyInvitationList'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    post:
      operationId: v2_parties_invitations_create
      description: Party invitation management
      tags:
      - parties
      - Party Invitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartyInvitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartyInvitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartyInvitationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyInvitation'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/invitations/{id}/:
    get:
      operationId: v2_parties_invitations_retrieve
      description: Party invitation management
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Party Invitation.
        required: true
      tags:
      - parties
      - Party Invitation
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyInvitation'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    put:
      operationId: v2_parties_invitations_update
      description: Party invitation management
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Party Invitation.
        required: true
      tags:
      - parties
      - Party Invitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartyInvitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartyInvitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartyInvitationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyInvitation'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    patch:
      operationId: v2_parties_invitations_partial_update
      description: Party invitation management
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Party Invitation.
        required: true
      tags:
      - parties
      - Party Invitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPartyInvitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPartyInvitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPartyInvitationRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyInvitation'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    delete:
      operationId: v2_parties_invitations_destroy
      description: Party invitation management
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Party Invitation.
        required: true
      tags:
      - parties
      - Party Invitation
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/invitations/{id}/accept/:
    post:
      operationId: v2_parties_invitations_accept_create
      description: Accept party invitation
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Party Invitation.
        required: true
      tags:
      - parties
      - Party Invitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartyInvitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartyInvitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartyInvitationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyInvitation'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/invitations/{id}/analytics/:
    get:
      operationId: v2_parties_invitations_analytics_retrieve
      description: Get party analytics (for host only)
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Party Invitation.
        required: true
      tags:
      - parties
      - Party Invitation
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyInvitation'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/invitations/{id}/decline/:
    post:
      operationId: v2_parties_invitations_decline_create
      description: Decline party invitation
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Party Invitation.
        required: true
      tags:
      - parties
      - Party Invitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartyInvitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartyInvitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartyInvitationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyInvitation'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/invitations/{id}/join_by_code/:
    post:
      operationId: v2_parties_invitations_join_by_code_create
      description: Join party using room code
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Party Invitation.
        required: true
      tags:
      - parties
      - Party Invitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartyInvitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartyInvitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartyInvitationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyInvitation'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/invitations/{id}/kick_participant/:
    post:
      operationId: v2_parties_invitations_kick_participant_create
      description: Kick a participant from the party
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Party Invitation.
        required: true
      tags:
      - parties
      - Party Invitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartyInvitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartyInvitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartyInvitationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyInvitation'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/invitations/{id}/promote_participant/:
    post:
      operationId: v2_parties_invitations_promote_participant_create
      description: Promote a participant to moderator
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Party Invitation.
        required: true
      tags:
      - parties
      - Party Invitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartyInvitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartyInvitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartyInvitationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyInvitation'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/join-by-code/:
    post:
      operationId: v2_parties_join_by_code_create
      description: Join party by room code
      summary: JoinByCodeView POST
      tags:
      - parties
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/join-by-invite/:
    post:
      operationId: v2_parties_join_by_invite_create
      description: Join party using invite code
      tags:
      - parties
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/public/:
    get:
      operationId: v2_parties_public_list
      description: Get public parties that users can join
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - cancelled
          - ended
          - live
          - paused
          - scheduled
        description: |-
          * `scheduled` - Scheduled
          * `live` - Live
          * `paused` - Paused
          * `ended` - Ended
          * `cancelled` - Cancelled
      tags:
      - parties
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWatchPartyList'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/recent/:
    get:
      operationId: v2_parties_recent_list
      description: Get recently created/joined parties for a user
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - parties
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWatchPartyList'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/recommendations/:
    get:
      operationId: v2_parties_recommendations_retrieve
      description: Get personalized party recommendations for user
      tags:
      - parties
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/report/:
    post:
      operationId: v2_parties_report_create
      description: Create party reports
      tags:
      - parties
      - Party Report
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartyReportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartyReportRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartyReportRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyReport'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/search/:
    get:
      operationId: v2_parties_search_retrieve
      description: Advanced party search
      summary: PartySearchView GET
      tags:
      - parties
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /parties/trending/:
    get:
      operationId: v2_parties_trending_retrieve
      description: Get trending public parties based on activity
      tags:
      - parties
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /search/:
    get:
      operationId: v2_search_retrieve
      description: Search across multiple models with filters and sorting
      summary: GlobalSearchView GET
      tags:
      - search
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /search/analytics/:
    get:
      operationId: v2_search_analytics_retrieve
      description: Get search analytics data
      summary: SearchAnalyticsView GET
      tags:
      - search
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /search/discover/:
    get:
      operationId: v2_search_discover_retrieve
      description: Get personalized content recommendations
      summary: DiscoverContentView GET
      tags:
      - search
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /search/saved/:
    get:
      operationId: v2_search_saved_retrieve
      description: Get user's saved searches
      summary: SavedSearchView GET
      tags:
      - search
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    post:
      operationId: v2_search_saved_create
      description: Save a new search
      summary: SavedSearchView POST
      tags:
      - search
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    put:
      operationId: v2_search_saved_update
      description: Update a saved search
      summary: SavedSearchView PUT
      tags:
      - search
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    delete:
      operationId: v2_search_saved_destroy
      description: Delete a saved search
      summary: SavedSearchView DELETE
      tags:
      - search
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /search/saved/{search_id}/:
    get:
      operationId: v2_search_saved_retrieve_2
      description: Get user's saved searches
      summary: SavedSearchView GET
      parameters:
      - in: path
        name: search_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - search
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    post:
      operationId: v2_search_saved_create_2
      description: Save a new search
      summary: SavedSearchView POST
      parameters:
      - in: path
        name: search_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - search
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    put:
      operationId: v2_search_saved_update_2
      description: Update a saved search
      summary: SavedSearchView PUT
      parameters:
      - in: path
        name: search_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - search
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    delete:
      operationId: v2_search_saved_destroy_2
      description: Delete a saved search
      summary: SavedSearchView DELETE
      parameters:
      - in: path
        name: search_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - search
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /search/suggestions/:
    get:
      operationId: v2_search_suggestions_retrieve
      description: Get search suggestions
      summary: SearchSuggestionsView GET
      tags:
      - search
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    post:
      operationId: v2_search_suggestions_create
      description: Track suggestion click
      summary: SearchSuggestionsView POST
      tags:
      - search
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /search/trending/:
    get:
      operationId: v2_search_trending_retrieve
      description: Get trending searches
      summary: TrendingSearchView GET
      tags:
      - search
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /social/groups/:
    get:
      operationId: v2_social_groups_retrieve
      description: Get social groups
      summary: SocialGroupsView GET
      tags:
      - social
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    post:
      operationId: v2_social_groups_create
      description: Create a new social group
      summary: SocialGroupsView POST
      tags:
      - social
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /social/groups/{group_id}/:
    get:
      operationId: v2_social_groups_retrieve_2
      description: Get group details
      summary: GroupDetailView GET
      parameters:
      - in: path
        name: group_id
        schema:
          type: integer
        required: true
      tags:
      - social
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /social/groups/{group_id}/join/:
    post:
      operationId: v2_social_groups_join_create
      description: Join a group
      summary: JoinGroupView POST
      parameters:
      - in: path
        name: group_id
        schema:
          type: integer
        required: true
      tags:
      - social
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /social/groups/{group_id}/leave/:
    post:
      operationId: v2_social_groups_leave_create
      description: Leave a group
      summary: LeaveGroupView POST
      parameters:
      - in: path
        name: group_id
        schema:
          type: integer
        required: true
      tags:
      - social
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /store/achievements/:
    get:
      operationId: v2_store_achievements_retrieve
      description: Get user's achievements and available achievements
      summary: AchievementsView GET
      tags:
      - store
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /store/inventory/:
    get:
      operationId: v2_store_inventory_retrieve
      description: Get user's inventory
      summary: UserInventoryView GET
      tags:
      - store
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    patch:
      operationId: v2_store_inventory_partial_update
      description: Update inventory item (equip/unequip)
      summary: UserInventoryView PATCH
      tags:
      - store
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /store/items/:
    get:
      operationId: v2_store_items_retrieve
      description: Get available store items
      summary: StoreItemsView GET
      tags:
      - store
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /store/purchase/:
    post:
      operationId: v2_store_purchase_create
      description: Purchase an item
      summary: PurchaseItemView POST
      tags:
      - store
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /store/rewards/:
    get:
      operationId: v2_store_rewards_retrieve
      description: Get available rewards
      summary: RewardsView GET
      tags:
      - store
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /store/rewards/{reward_id}/claim/:
    post:
      operationId: v2_store_rewards_claim_create
      description: Claim a specific reward
      summary: ClaimRewardView POST
      parameters:
      - in: path
        name: reward_id
        schema:
          type: integer
        required: true
      tags:
      - store
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /store/stats/:
    get:
      operationId: v2_store_stats_retrieve
      description: Get detailed user statistics
      summary: UserStatsView GET
      tags:
      - store
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /support/faq/:
    get:
      operationId: v2_support_faq_retrieve
      description: Get FAQs with optional filtering
      tags:
      - support
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: false
  /support/faq/{faq_id}/view/:
    post:
      operationId: v2_support_faq_view_create
      description: Track FAQ view
      parameters:
      - in: path
        name: faq_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - support
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: false
  /support/faq/{faq_id}/vote/:
    post:
      operationId: v2_support_faq_vote_create
      description: Vote on FAQ helpfulness
      parameters:
      - in: path
        name: faq_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - support
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: false
  /support/faq/categories/:
    get:
      operationId: v2_support_faq_categories_retrieve
      description: Get all active FAQ categories
      tags:
      - support
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: false
  /support/feedback/:
    get:
      operationId: v2_support_feedback_retrieve
      description: Get user feedback or submit new feedback
      tags:
      - support
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    post:
      operationId: v2_support_feedback_create
      description: Get user feedback or submit new feedback
      tags:
      - support
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /support/feedback/{feedback_id}/vote/:
    post:
      operationId: v2_support_feedback_vote_create
      description: Vote on user feedback
      parameters:
      - in: path
        name: feedback_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - support
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /support/search/:
    get:
      operationId: v2_support_search_retrieve
      description: Search across FAQs and support content
      tags:
      - support
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: false
  /support/tickets/:
    get:
      operationId: v2_support_tickets_retrieve
      description: Get user's support tickets or create new ticket
      tags:
      - support
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    post:
      operationId: v2_support_tickets_create
      description: Get user's support tickets or create new ticket
      tags:
      - support
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /support/tickets/{ticket_id}/:
    get:
      operationId: v2_support_tickets_retrieve_2
      description: Get specific support ticket with messages
      parameters:
      - in: path
        name: ticket_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - support
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /support/tickets/{ticket_id}/messages/:
    post:
      operationId: v2_support_tickets_messages_create
      description: Add message to support ticket
      parameters:
      - in: path
        name: ticket_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - support
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /test/:
    get:
      operationId: v2_test_retrieve
      description: Test endpoint to verify server is working
      tags:
      - test
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: false
  /users/{user_id}/block/:
    post:
      operationId: v2_users_block_create_2
      description: Block a user
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/{user_id}/friend-request/:
    post:
      operationId: v2_users_friend_request_create
      description: Send friend request to user
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/{user_id}/mutual-friends/:
    get:
      operationId: v2_users_mutual_friends_retrieve
      description: Get mutual friends with another user
      summary: UserMutualFriendsView GET
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/{user_id}/profile/:
    get:
      operationId: v2_users_profile_retrieve_2
      description: Get public user profile
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/{user_id}/public-profile/:
    get:
      operationId: v2_users_public_profile_retrieve
      description: Get public user profile
      summary: PublicProfileView GET
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/2fa/disable/:
    post:
      operationId: v2_users_2fa_disable_create
      description: Disable 2FA for user
      summary: Disable2FAView POST
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/2fa/enable/:
    post:
      operationId: v2_users_2fa_enable_create
      description: Enable 2FA for user
      summary: Enable2FAView POST
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/2fa/setup/:
    post:
      operationId: v2_users_2fa_setup_create
      description: Generate 2FA setup data
      summary: Setup2FAView POST
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/achievements/:
    get:
      operationId: v2_users_achievements_retrieve
      description: Return user achievements
      summary: UserAchievementsView GET
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/activity/:
    get:
      operationId: v2_users_activity_retrieve
      description: Get activity feed
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/avatar/upload/:
    post:
      operationId: v2_users_avatar_upload_create
      description: Upload user avatar
      summary: AvatarUploadView POST
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/block/:
    post:
      operationId: v2_users_block_create
      description: Block a user
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/dashboard/stats/:
    get:
      operationId: v2_users_dashboard_stats_retrieve
      description: Get dashboard statistics for the user
      summary: DashboardStatsView GET
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/delete-account/:
    post:
      operationId: v2_users_delete_account_create
      description: Delete user account with confirmation
      summary: DeleteAccountView POST
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/export-data/:
    get:
      operationId: v2_users_export_data_retrieve
      description: Export user data for GDPR compliance
      summary: ExportUserDataView GET
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/favorites/:
    get:
      operationId: v2_users_favorites_retrieve
      description: User favorites
      summary: FavoritesView GET
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/favorites/{favorite_id}/remove/:
    post:
      operationId: v2_users_favorites_remove_create
      description: Remove favorite
      summary: RemoveFavoriteView POST
      parameters:
      - in: path
        name: favorite_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/favorites/add/:
    post:
      operationId: v2_users_favorites_add_create
      description: Add favorite
      summary: AddFavoriteView POST
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/friends/:
    get:
      operationId: v2_users_friends_retrieve
      description: Get user's friends list
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/friends/{friendship_id}/accept/:
    post:
      operationId: v2_users_friends_accept_create
      description: Accept a friend request
      parameters:
      - in: path
        name: friendship_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/friends/{friendship_id}/decline/:
    post:
      operationId: v2_users_friends_decline_create
      description: Decline a friend request
      parameters:
      - in: path
        name: friendship_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/friends/{request_id}/accept/:
    post:
      operationId: v2_users_friends_accept_create_2
      description: Accept friend request
      parameters:
      - in: path
        name: request_id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/friends/{request_id}/decline/:
    post:
      operationId: v2_users_friends_decline_create_2
      description: Decline friend request
      parameters:
      - in: path
        name: request_id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/friends/{username}/remove/:
    delete:
      operationId: v2_users_friends_remove_destroy
      description: Remove a friend
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/friends/legacy/:
    get:
      operationId: v2_users_friends_legacy_retrieve
      description: List user friends
      summary: FriendsListView GET
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/friends/legacy/{friend_id}/remove/:
    post:
      operationId: v2_users_friends_legacy_remove_create
      description: Remove friend
      summary: RemoveFriendView POST
      parameters:
      - in: path
        name: friend_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/friends/legacy/{request_id}/accept/:
    post:
      operationId: v2_users_friends_legacy_accept_create
      description: Accept friend request
      parameters:
      - in: path
        name: request_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/friends/legacy/{request_id}/decline/:
    post:
      operationId: v2_users_friends_legacy_decline_create
      description: Decline friend request
      parameters:
      - in: path
        name: request_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/friends/legacy/requests/:
    get:
      operationId: v2_users_friends_legacy_requests_retrieve
      description: List friend requests
      summary: FriendRequestsView GET
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/friends/legacy/send/:
    post:
      operationId: v2_users_friends_legacy_send_create
      description: Send friend request to user
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/friends/request/:
    post:
      operationId: v2_users_friends_request_create
      description: Send a friend request
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/friends/requests/:
    get:
      operationId: v2_users_friends_requests_retrieve
      description: List friend requests
      summary: FriendRequestsView GET
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/friends/suggestions/:
    get:
      operationId: v2_users_friends_suggestions_retrieve
      description: Get friend suggestions
      summary: FriendSuggestionsView GET
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/inventory/:
    get:
      operationId: v2_users_inventory_retrieve
      description: Get user's inventory
      summary: UserInventoryView GET
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/legacy/activity/:
    get:
      operationId: v2_users_legacy_activity_retrieve
      description: Get user activity history
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/legacy/search/:
    get:
      operationId: v2_users_legacy_search_retrieve
      description: Search users
      summary: UserSearchView GET
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/notifications/:
    get:
      operationId: v2_users_notifications_retrieve
      description: User notifications
      summary: NotificationsView GET
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/notifications/{notification_id}/read/:
    post:
      operationId: v2_users_notifications_read_create
      description: Mark notification as read
      summary: MarkNotificationReadView POST
      parameters:
      - in: path
        name: notification_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/notifications/mark-all-read/:
    post:
      operationId: v2_users_notifications_mark_all_read_create
      description: Mark all notifications as read
      summary: MarkAllNotificationsReadView POST
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/notifications/settings/:
    get:
      operationId: v2_users_notifications_settings_retrieve
      description: Notification settings
      summary: NotificationSettingsView GET
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    put:
      operationId: v2_users_notifications_settings_update
      description: Notification settings
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/onboarding/:
    post:
      operationId: v2_users_onboarding_create
      description: Complete user onboarding process
      summary: OnboardingView POST
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/online-status/:
    get:
      operationId: v2_users_online_status_retrieve
      description: Get online status of users
      summary: UserOnlineStatusView GET
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/password/:
    post:
      operationId: v2_users_password_create
      description: Update user password
      summary: UpdatePasswordView POST
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/privacy/settings/:
    get:
      operationId: v2_users_privacy_settings_retrieve
      description: Privacy settings
      summary: PrivacySettingsView GET
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    put:
      operationId: v2_users_privacy_settings_update
      description: Privacy settings
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/profile/:
    get:
      operationId: v2_users_profile_retrieve
      description: Get user profile
      summary: UserProfileView GET
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/profile/update/:
    put:
      operationId: v2_users_profile_update_update
      description: Update user profile
      summary: UpdateProfileView PUT
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/report/:
    post:
      operationId: v2_users_report_create
      description: Report user
      summary: UserReportView POST
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/search/:
    get:
      operationId: v2_users_search_retrieve
      description: Search for users
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/sessions/:
    get:
      operationId: v2_users_sessions_retrieve
      description: List active sessions for user
      summary: UserSessionsView GET
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/sessions/{session_id}/:
    delete:
      operationId: v2_users_sessions_destroy
      description: Revoke specific session
      summary: RevokeSessionView DELETE
      parameters:
      - in: path
        name: session_id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/sessions/revoke-all/:
    post:
      operationId: v2_users_sessions_revoke_all_create
      description: Revoke all other sessions
      summary: RevokeAllSessionsView POST
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/settings/:
    get:
      operationId: v2_users_settings_retrieve
      description: User settings
      summary: UserSettingsView GET
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    put:
      operationId: v2_users_settings_update
      description: User settings
      summary: UserSettingsView PUT
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/stats/:
    get:
      operationId: v2_users_stats_retrieve
      description: Return detailed user statistics
      summary: UserStatsView GET
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/suggestions/:
    get:
      operationId: v2_users_suggestions_retrieve
      description: Get friend suggestions
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/unblock/:
    post:
      operationId: v2_users_unblock_create
      description: Unblock a user
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/users/{user_id}/block/:
    post:
      operationId: v2_users_users_block_create
      description: Block a user
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/users/{user_id}/unblock/:
    post:
      operationId: v2_users_users_unblock_create
      description: Unblock a user
      summary: UnblockUserView POST
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /users/watch-history/:
    get:
      operationId: v2_users_watch_history_retrieve
      description: User watch history
      summary: WatchHistoryView GET
      tags:
      - users
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/:
    get:
      operationId: v2_videos_list
      description: Video CRUD operations
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: require_premium
        schema:
          type: boolean
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: source_type
        schema:
          type: string
          enum:
          - gdrive
          - s3
          - upload
          - url
          - youtube
        description: |-
          * `upload` - Direct Upload
          * `gdrive` - Google Drive
          * `s3` - Amazon S3
          * `youtube` - YouTube
          * `url` - External URL
      - in: query
        name: uploader
        schema:
          type: string
          format: uuid
      - in: query
        name: visibility
        schema:
          type: string
          enum:
          - friends
          - private
          - public
        description: |-
          * `public` - Public
          * `friends` - Friends Only
          * `private` - Private
      tags:
      - videos
      - Video
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVideoList'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    post:
      operationId: v2_videos_create
      description: Video CRUD operations
      tags:
      - videos
      - Video
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VideoCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VideoCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoCreate'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/{id}/:
    get:
      operationId: v2_videos_retrieve
      description: Get video details and record view
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Video.
        required: true
      tags:
      - videos
      - Video
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoDetail'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    put:
      operationId: v2_videos_update
      description: Video CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Video.
        required: true
      tags:
      - videos
      - Video
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VideoUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VideoUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoUpdate'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    patch:
      operationId: v2_videos_partial_update
      description: Video CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Video.
        required: true
      tags:
      - videos
      - Video
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVideoUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVideoUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVideoUpdateRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoUpdate'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    delete:
      operationId: v2_videos_destroy
      description: Video CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Video.
        required: true
      tags:
      - videos
      - Video
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/{id}/comments/:
    get:
      operationId: v2_videos_comments_retrieve_2
      description: Get or add comments for a video
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Video.
        required: true
      tags:
      - videos
      - Video
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    post:
      operationId: v2_videos_comments_create_2
      description: Get or add comments for a video
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Video.
        required: true
      tags:
      - videos
      - Video
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VideoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VideoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/{id}/download/:
    get:
      operationId: v2_videos_download_retrieve
      description: Download video file
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Video.
        required: true
      tags:
      - videos
      - Video
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/{id}/like/:
    post:
      operationId: v2_videos_like_create
      description: Like or unlike a video
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Video.
        required: true
      tags:
      - videos
      - Video
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VideoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VideoRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/{id}/stream/:
    get:
      operationId: v2_videos_stream_retrieve
      description: Stream video file
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Video.
        required: true
      tags:
      - videos
      - Video
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/{video_id}/analytics/:
    get:
      operationId: v2_videos_analytics_retrieve
      description: Get analytics for video
      summary: VideoAnalyticsView GET
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/{video_id}/analytics/comparative/:
    get:
      operationId: v2_videos_analytics_comparative_retrieve
      description: Get comparative analytics for video vs channel/platform averages
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/{video_id}/analytics/detailed/:
    get:
      operationId: v2_videos_analytics_detailed_retrieve
      description: Get comprehensive analytics for a video
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/{video_id}/analytics/heatmap/:
    get:
      operationId: v2_videos_analytics_heatmap_retrieve
      description: Get engagement heatmap for video timeline
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/{video_id}/analytics/journey/:
    get:
      operationId: v2_videos_analytics_journey_retrieve
      description: Get viewer journey analysis for video
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/{video_id}/analytics/retention/:
    get:
      operationId: v2_videos_analytics_retention_retrieve
      description: Get viewer retention curve for video
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/{video_id}/processing-status/:
    get:
      operationId: v2_videos_processing_status_retrieve
      description: Get video processing status
      summary: VideoProcessingStatusView GET
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/{video_id}/proxy/:
    get:
      operationId: v2_videos_proxy_retrieve
      description: Proxy video stream from Google Drive
      summary: VideoProxyView GET
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/{video_id}/quality-variants/:
    get:
      operationId: v2_videos_quality_variants_retrieve
      description: Get available quality variants for a video
      summary: VideoQualityVariantsView GET
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/{video_id}/regenerate-thumbnail/:
    post:
      operationId: v2_videos_regenerate_thumbnail_create
      description: Regenerate video thumbnail
      summary: RegenerateThumbnailView POST
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/{video_id}/share/:
    post:
      operationId: v2_videos_share_create
      description: Generate shareable links for videos
      summary: VideoShareView POST
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/{video_id}/stream/:
    get:
      operationId: v2_videos_stream_retrieve_2
      description: Get streaming URL for video
      summary: VideoStreamingUrlView GET
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/{video_id}/thumbnail/:
    post:
      operationId: v2_videos_thumbnail_create
      description: Generate thumbnail for video
      summary: VideoThumbnailView POST
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/analytics/channel/:
    get:
      operationId: v2_videos_analytics_channel_retrieve
      description: Get analytics dashboard for user's channel
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/analytics/trending/:
    get:
      operationId: v2_videos_analytics_trending_retrieve
      description: Get trending videos analysis (admin only)
      tags:
      - videos
      - Admin Only
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/comments/:
    get:
      operationId: v2_videos_comments_list
      description: Video comment CRUD operations
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - videos
      - Video Comment
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVideoCommentList'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    post:
      operationId: v2_videos_comments_create
      description: Video comment CRUD operations
      tags:
      - videos
      - Video Comment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoCommentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VideoCommentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VideoCommentRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoComment'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/comments/{id}/:
    get:
      operationId: v2_videos_comments_retrieve
      description: Video comment CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Video Comment.
        required: true
      tags:
      - videos
      - Video Comment
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoComment'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    put:
      operationId: v2_videos_comments_update
      description: Video comment CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Video Comment.
        required: true
      tags:
      - videos
      - Video Comment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoCommentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VideoCommentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VideoCommentRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoComment'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    patch:
      operationId: v2_videos_comments_partial_update
      description: Video comment CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Video Comment.
        required: true
      tags:
      - videos
      - Video Comment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVideoCommentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVideoCommentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVideoCommentRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoComment'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    delete:
      operationId: v2_videos_comments_destroy
      description: Video comment CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Video Comment.
        required: true
      tags:
      - videos
      - Video Comment
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/gdrive/:
    get:
      operationId: v2_videos_gdrive_retrieve
      description: List movies from user's Google Drive
      summary: GoogleDriveMoviesView GET
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
    post:
      operationId: v2_videos_gdrive_create
      description: Add a Google Drive movie to our database
      summary: GoogleDriveMoviesView POST
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/gdrive/{video_id}/delete/:
    delete:
      operationId: v2_videos_gdrive_delete_destroy
      description: Delete a movie from Google Drive and our database
      summary: GoogleDriveMovieDeleteView DELETE
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/gdrive/{video_id}/stream/:
    get:
      operationId: v2_videos_gdrive_stream_retrieve
      description: Get streaming URL for a Google Drive movie
      summary: GoogleDriveMovieStreamView GET
      parameters:
      - in: path
        name: video_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/gdrive/upload/:
    post:
      operationId: v2_videos_gdrive_upload_create
      description: Upload a movie to Google Drive
      summary: GoogleDriveMovieUploadView POST
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/search/:
    get:
      operationId: v2_videos_search_retrieve
      description: Search videos with advanced filters
      summary: VideoSearchView GET
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/search/advanced/:
    get:
      operationId: v2_videos_search_advanced_retrieve
      description: Advanced video search with filters
      summary: VideoSearchEnhancedView GET
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/upload/:
    post:
      operationId: v2_videos_upload_create
      description: Initiate video upload
      summary: VideoUploadView POST
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/upload/{upload_id}/complete/:
    post:
      operationId: v2_videos_upload_complete_create
      description: Complete video upload
      summary: VideoUploadCompleteView POST
      parameters:
      - in: path
        name: upload_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/upload/{upload_id}/status/:
    get:
      operationId: v2_videos_upload_status_retrieve
      description: Get upload status
      parameters:
      - in: path
        name: upload_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - videos
      - Video Upload
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoUpload'
          description: ''
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/upload/s3/:
    post:
      operationId: v2_videos_upload_s3_create
      description: Generate presigned URL for S3 upload
      summary: S3VideoUploadView POST
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
  /videos/validate-url/:
    post:
      operationId: v2_videos_validate_url_create
      description: Validate external video URL
      tags:
      - videos
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
      x-authentication:
        types:
        - JWTAuthentication
        - SessionAuthentication
        required: true
components:
  schemas:
    ActionEnum:
      enum:
      - delete_message
      - ban_user
      - mute_user
      - slow_mode
      type: string
      description: |-
        * `delete_message` - delete_message
        * `ban_user` - ban_user
        * `mute_user` - mute_user
        * `slow_mode` - slow_mode
    AdminDashboardStats:
      type: object
      description: Admin dashboard statistics
      properties:
        total_users:
          type: integer
          description: Total number of users
        total_parties:
          type: integer
          description: Total number of parties
        total_videos:
          type: integer
          description: Total number of videos
        active_subscriptions:
          type: integer
          description: Active subscriptions
        revenue_this_month:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Revenue this month
        new_users_this_week:
          type: integer
          description: New users this week
        popular_videos:
          type: array
          items: {}
          description: Popular videos
        recent_activities:
          type: array
          items: {}
          description: Recent activities
      required:
      - active_subscriptions
      - new_users_this_week
      - popular_videos
      - recent_activities
      - revenue_this_month
      - total_parties
      - total_users
      - total_videos
    AudioQualityEnum:
      enum:
      - low
      - medium
      - high
      - ultra
      type: string
      description: |-
        * `low` - Low (8kHz)
        * `medium` - Medium (16kHz)
        * `high` - High (32kHz)
        * `ultra` - Ultra (48kHz)
    BanTypeEnum:
      enum:
      - permanent
      - temporary
      - timeout
      type: string
      description: |-
        * `permanent` - Permanent Ban
        * `temporary` - Temporary Ban
        * `timeout` - Timeout
    ChatBan:
      type: object
      description: Chat ban serializer
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        room:
          type: string
          format: uuid
        user:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        banned_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        ban_type:
          $ref: '#/components/schemas/BanTypeEnum'
        reason:
          type: string
          title: Ban Reason
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Banned At
        expires_at:
          type: string
          format: date-time
          nullable: true
          title: Ban Expires At
        is_active:
          type: boolean
          title: Ban Active
      required:
      - banned_by
      - created_at
      - id
      - reason
      - room
      - user
    ChatBanRequest:
      type: object
      description: Chat ban serializer
      properties:
        room:
          type: string
          format: uuid
        ban_type:
          $ref: '#/components/schemas/BanTypeEnum'
        reason:
          type: string
          minLength: 1
          title: Ban Reason
        expires_at:
          type: string
          format: date-time
          nullable: true
          title: Ban Expires At
        is_active:
          type: boolean
          title: Ban Active
      required:
      - reason
      - room
    ChatMessage:
      type: object
      description: Chat message serializer
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        room:
          type: string
          format: uuid
        user:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        content:
          type: string
          title: Message Content
        message_type:
          $ref: '#/components/schemas/MessageTypeEnum'
        reply_to:
          type: string
          format: uuid
          nullable: true
        reply_to_message:
          type: object
          additionalProperties: {}
          description: Get basic info about the message being replied to
          readOnly: true
        reply_count:
          type: integer
          readOnly: true
        moderation_status:
          allOf:
          - $ref: '#/components/schemas/ModerationStatusEnum'
          readOnly: true
        is_visible:
          type: boolean
          readOnly: true
        metadata:
          title: Additional Metadata
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - content
      - created_at
      - id
      - is_visible
      - moderation_status
      - reply_count
      - reply_to_message
      - room
      - updated_at
      - user
    ChatMessageCreate:
      type: object
      description: Serializer for creating chat messages
      properties:
        content:
          type: string
          title: Message Content
        message_type:
          $ref: '#/components/schemas/MessageTypeEnum'
        reply_to:
          type: string
          format: uuid
          nullable: true
        metadata:
          title: Additional Metadata
      required:
      - content
    ChatMessageCreateRequest:
      type: object
      description: Serializer for creating chat messages
      properties:
        content:
          type: string
          minLength: 1
          title: Message Content
        message_type:
          $ref: '#/components/schemas/MessageTypeEnum'
        reply_to:
          type: string
          format: uuid
          nullable: true
        metadata:
          title: Additional Metadata
      required:
      - content
    ChatModerationLog:
      type: object
      description: Chat moderation log serializer
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        room:
          type: string
          format: uuid
        moderator:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        target_user:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        message:
          type: string
          format: uuid
          nullable: true
        message_preview:
          type: object
          additionalProperties: {}
          description: Get preview of the moderated message
          readOnly: true
        action_type:
          $ref: '#/components/schemas/ChatModerationLogActionTypeEnum'
        reason:
          type: string
          title: Reason for Action
        duration:
          type: string
          nullable: true
          title: Action Duration
        is_active:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Action Taken At
        expires_at:
          type: string
          format: date-time
          nullable: true
          title: Action Expires At
      required:
      - action_type
      - created_at
      - id
      - is_active
      - message_preview
      - moderator
      - reason
      - room
      - target_user
    ChatModerationLogActionTypeEnum:
      enum:
      - hide
      - delete
      - flag
      - unflag
      - ban_user
      - unban_user
      - timeout_user
      - promote_mod
      - demote_mod
      type: string
      description: |-
        * `hide` - Message Hidden
        * `delete` - Message Deleted
        * `flag` - Message Flagged
        * `unflag` - Message Unflagged
        * `ban_user` - User Banned
        * `unban_user` - User Unbanned
        * `timeout_user` - User Timed Out
        * `promote_mod` - User Promoted to Moderator
        * `demote_mod` - User Demoted from Moderator
    ChatRoom:
      type: object
      description: Chat room serializer
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          title: Room Name
          maxLength: 200
        description:
          type: string
          title: Room Description
        party:
          type: string
          format: uuid
          readOnly: true
        party_title:
          type: string
          readOnly: true
        max_users:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_moderated:
          type: boolean
          title: Moderated Room
        allow_anonymous:
          type: boolean
          title: Allow Anonymous Users
        slow_mode_seconds:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Slow Mode (seconds)
        active_user_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - active_user_count
      - created_at
      - id
      - name
      - party
      - party_title
      - updated_at
    ChatRoomRequest:
      type: object
      description: Chat room serializer
      properties:
        name:
          type: string
          minLength: 1
          title: Room Name
          maxLength: 200
        description:
          type: string
          title: Room Description
        max_users:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_moderated:
          type: boolean
          title: Moderated Room
        allow_anonymous:
          type: boolean
          title: Allow Anonymous Users
        slow_mode_seconds:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Slow Mode (seconds)
      required:
      - name
    ChatRoomStats:
      type: object
      description: Chat room statistics serializer
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          title: Room Name
          maxLength: 200
        active_user_count:
          type: integer
          readOnly: true
        total_messages:
          type: integer
          description: Get total message count
          readOnly: true
        active_messages:
          type: integer
          description: Get active message count
          readOnly: true
        total_users:
          type: integer
          description: Get total users who have participated
          readOnly: true
        banned_users_count:
          type: integer
          description: Get banned users count
          readOnly: true
      required:
      - active_messages
      - active_user_count
      - banned_users_count
      - id
      - name
      - total_messages
      - total_users
    ContentReport:
      type: object
      description: Serializer for content reports
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        reported_by:
          type: string
          format: uuid
        reported_by_name:
          type: string
          readOnly: true
        reported_by_email:
          type: string
          readOnly: true
        report_type:
          $ref: '#/components/schemas/ReportTypeBe8Enum'
        report_type_display:
          type: string
          readOnly: true
        content_type:
          $ref: '#/components/schemas/ContentTypeEnum'
        content_type_display:
          type: string
          readOnly: true
        content_id:
          type: string
          format: uuid
          description: ID of the reported content
        reported_video:
          type: string
          format: uuid
          nullable: true
        reported_party:
          type: string
          format: uuid
          nullable: true
        reported_user:
          type: string
          format: uuid
          nullable: true
        description:
          type: string
          description: Detailed description of the issue
        evidence_url:
          type: string
          format: uri
          description: URL to evidence (screenshot, etc.)
          maxLength: 200
        status:
          $ref: '#/components/schemas/Status9f9Enum'
        status_display:
          type: string
          readOnly: true
        priority:
          $ref: '#/components/schemas/Priority5f3Enum'
        priority_display:
          type: string
          readOnly: true
        assigned_to:
          type: string
          format: uuid
          nullable: true
        assigned_to_name:
          type: string
          readOnly: true
        resolution_notes:
          type: string
        action_taken:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        resolved_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - assigned_to_name
      - content_id
      - content_type
      - content_type_display
      - created_at
      - description
      - id
      - priority_display
      - report_type
      - report_type_display
      - reported_by
      - reported_by_email
      - reported_by_name
      - resolved_at
      - status_display
      - updated_at
    ContentReportCreate:
      type: object
      description: Serializer for creating content reports
      properties:
        report_type:
          $ref: '#/components/schemas/ReportTypeBe8Enum'
        content_type:
          $ref: '#/components/schemas/ContentTypeEnum'
        content_id:
          type: string
          format: uuid
          description: ID of the reported content
        reported_video:
          type: string
          format: uuid
          nullable: true
        reported_party:
          type: string
          format: uuid
          nullable: true
        reported_user:
          type: string
          format: uuid
          nullable: true
        description:
          type: string
          description: Detailed description of the issue
        evidence_url:
          type: string
          format: uri
          description: URL to evidence (screenshot, etc.)
          maxLength: 200
      required:
      - content_id
      - content_type
      - description
      - report_type
    ContentReportCreateRequest:
      type: object
      description: Serializer for creating content reports
      properties:
        report_type:
          $ref: '#/components/schemas/ReportTypeBe8Enum'
        content_type:
          $ref: '#/components/schemas/ContentTypeEnum'
        content_id:
          type: string
          format: uuid
          description: ID of the reported content
        reported_video:
          type: string
          format: uuid
          nullable: true
        reported_party:
          type: string
          format: uuid
          nullable: true
        reported_user:
          type: string
          format: uuid
          nullable: true
        description:
          type: string
          minLength: 1
          description: Detailed description of the issue
        evidence_url:
          type: string
          format: uri
          description: URL to evidence (screenshot, etc.)
          maxLength: 200
      required:
      - content_id
      - content_type
      - description
      - report_type
    ContentReportRequest:
      type: object
      description: Serializer for content reports
      properties:
        reported_by:
          type: string
          format: uuid
        report_type:
          $ref: '#/components/schemas/ReportTypeBe8Enum'
        content_type:
          $ref: '#/components/schemas/ContentTypeEnum'
        content_id:
          type: string
          format: uuid
          description: ID of the reported content
        reported_video:
          type: string
          format: uuid
          nullable: true
        reported_party:
          type: string
          format: uuid
          nullable: true
        reported_user:
          type: string
          format: uuid
          nullable: true
        description:
          type: string
          minLength: 1
          description: Detailed description of the issue
        evidence_url:
          type: string
          format: uri
          description: URL to evidence (screenshot, etc.)
          maxLength: 200
        status:
          $ref: '#/components/schemas/Status9f9Enum'
        priority:
          $ref: '#/components/schemas/Priority5f3Enum'
        assigned_to:
          type: string
          format: uuid
          nullable: true
        resolution_notes:
          type: string
        action_taken:
          type: string
      required:
      - content_id
      - content_type
      - description
      - report_type
      - reported_by
    ContentTypeEnum:
      enum:
      - video
      - party
      - comment
      - user_profile
      - message
      type: string
      description: |-
        * `video` - Video
        * `party` - Watch Party
        * `comment` - Comment
        * `user_profile` - User Profile
        * `message` - Chat Message
    EmailFrequencyEnum:
      enum:
      - instant
      - hourly
      - daily
      - weekly
      - never
      type: string
      description: |-
        * `instant` - Instant
        * `hourly` - Hourly Digest
        * `daily` - Daily Digest
        * `weekly` - Weekly Digest
        * `never` - Never
    EmailVerification:
      type: object
      description: Email verification serializer
      properties:
        token:
          type: string
      required:
      - token
    EmailVerificationRequest:
      type: object
      description: Email verification serializer
      properties:
        token:
          type: string
          minLength: 1
      required:
      - token
    EventAttendee:
      type: object
      description: Serializer for event attendee information
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/EventOrganizer'
          readOnly: true
        status:
          $ref: '#/components/schemas/EventAttendeeStatusEnum'
        rsvp_date:
          type: string
          format: date-time
          readOnly: true
        notes:
          type: string
          description: Optional notes from attendee
      required:
      - id
      - rsvp_date
      - user
    EventAttendeeStatusEnum:
      enum:
      - attending
      - maybe
      - not_attending
      - pending
      type: string
      description: |-
        * `attending` - Attending
        * `maybe` - Maybe
        * `not_attending` - Not Attending
        * `pending` - Pending Approval
    EventCreateUpdate:
      type: object
      description: Serializer for creating and updating events
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        location:
          type: string
          description: Physical or virtual location
          maxLength: 255
        max_attendees:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: Leave blank for unlimited attendees
        require_approval:
          type: boolean
        privacy:
          $ref: '#/components/schemas/PrivacyEnum'
        banner_image:
          type: string
          format: uri
          maxLength: 200
        category:
          type: string
          maxLength: 100
        tags: {}
      required:
      - description
      - end_time
      - start_time
      - title
    EventCreateUpdateRequest:
      type: object
      description: Serializer for creating and updating events
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          minLength: 1
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        location:
          type: string
          description: Physical or virtual location
          maxLength: 255
        max_attendees:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: Leave blank for unlimited attendees
        require_approval:
          type: boolean
        privacy:
          $ref: '#/components/schemas/PrivacyEnum'
        banner_image:
          type: string
          format: uri
          maxLength: 200
        category:
          type: string
          maxLength: 100
        tags: {}
      required:
      - description
      - end_time
      - start_time
      - title
    EventDetail:
      type: object
      description: Serializer for detailed event view
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        organizer:
          allOf:
          - $ref: '#/components/schemas/EventOrganizer'
          readOnly: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        location:
          type: string
          description: Physical or virtual location
          maxLength: 255
        max_attendees:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: Leave blank for unlimited attendees
        require_approval:
          type: boolean
        privacy:
          $ref: '#/components/schemas/PrivacyEnum'
        status:
          $ref: '#/components/schemas/Status8e4Enum'
        banner_image:
          type: string
          format: uri
          maxLength: 200
        category:
          type: string
          maxLength: 100
        tags: {}
        attendees:
          type: array
          items:
            $ref: '#/components/schemas/EventAttendee'
          readOnly: true
        invitations:
          type: array
          items:
            $ref: '#/components/schemas/EventInvitation'
          readOnly: true
        reminders:
          type: array
          items:
            $ref: '#/components/schemas/EventReminder'
          readOnly: true
        attendee_count:
          type: integer
          readOnly: true
        is_attending:
          type: boolean
          readOnly: true
        user_attendance_status:
          type: string
          readOnly: true
        is_full:
          type: boolean
          readOnly: true
        is_upcoming:
          type: boolean
          readOnly: true
        is_ongoing:
          type: boolean
          readOnly: true
        is_past:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - attendee_count
      - attendees
      - created_at
      - description
      - end_time
      - id
      - invitations
      - is_attending
      - is_full
      - is_ongoing
      - is_past
      - is_upcoming
      - organizer
      - reminders
      - start_time
      - title
      - updated_at
      - user_attendance_status
    EventInvitation:
      type: object
      description: Serializer for event invitations
      properties:
        id:
          type: integer
          readOnly: true
        inviter:
          allOf:
          - $ref: '#/components/schemas/EventOrganizer'
          readOnly: true
        invitee:
          allOf:
          - $ref: '#/components/schemas/EventOrganizer'
          readOnly: true
        status:
          $ref: '#/components/schemas/EventInvitationStatusEnum'
        message:
          type: string
          description: Personal message from inviter
        sent_at:
          type: string
          format: date-time
          readOnly: true
        responded_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        expires_at:
          type: string
          format: date-time
          nullable: true
      required:
      - id
      - invitee
      - inviter
      - responded_at
      - sent_at
    EventInvitationRequest:
      type: object
      description: Serializer for event invitations
      properties:
        invitee_id:
          type: integer
          writeOnly: true
        status:
          $ref: '#/components/schemas/EventInvitationStatusEnum'
        message:
          type: string
          description: Personal message from inviter
        expires_at:
          type: string
          format: date-time
          nullable: true
      required:
      - invitee_id
    EventInvitationStatusEnum:
      enum:
      - sent
      - accepted
      - declined
      - expired
      type: string
      description: |-
        * `sent` - Sent
        * `accepted` - Accepted
        * `declined` - Declined
        * `expired` - Expired
    EventList:
      type: object
      description: Serializer for event list view (minimal data)
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        organizer:
          allOf:
          - $ref: '#/components/schemas/EventOrganizer'
          readOnly: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        location:
          type: string
          description: Physical or virtual location
          maxLength: 255
        max_attendees:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: Leave blank for unlimited attendees
        privacy:
          $ref: '#/components/schemas/PrivacyEnum'
        status:
          $ref: '#/components/schemas/Status8e4Enum'
        banner_image:
          type: string
          format: uri
          maxLength: 200
        category:
          type: string
          maxLength: 100
        tags: {}
        attendee_count:
          type: integer
          readOnly: true
        is_attending:
          type: boolean
          readOnly: true
        is_full:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - attendee_count
      - created_at
      - description
      - end_time
      - id
      - is_attending
      - is_full
      - organizer
      - start_time
      - title
    EventOrganizer:
      type: object
      description: Serializer for event organizer information
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          title: Email Address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - first_name
      - id
      - last_name
    EventOrganizerRequest:
      type: object
      description: Serializer for event organizer information
      properties:
        email:
          type: string
          format: email
          minLength: 1
          title: Email Address
          maxLength: 254
        first_name:
          type: string
          minLength: 1
          maxLength: 150
        last_name:
          type: string
          minLength: 1
          maxLength: 150
      required:
      - email
      - first_name
      - last_name
    EventReminder:
      type: object
      description: Serializer for event reminders
      properties:
        id:
          type: integer
          readOnly: true
        reminder_type:
          $ref: '#/components/schemas/ReminderTypeEnum'
        minutes_before:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Minutes before event start
        is_sent:
          type: boolean
          readOnly: true
        sent_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - is_sent
      - minutes_before
      - reminder_type
      - sent_at
    GitHubAuthRequest:
      type: object
      description: Serializer for GitHub OAuth requests
      properties:
        access_token:
          type: string
      required:
      - access_token
    GitHubAuthRequestRequest:
      type: object
      description: Serializer for GitHub OAuth requests
      properties:
        access_token:
          type: string
          minLength: 1
      required:
      - access_token
    GoogleAuthRequest:
      type: object
      description: Serializer for Google OAuth requests
      properties:
        access_token:
          type: string
      required:
      - access_token
    GoogleAuthRequestRequest:
      type: object
      description: Serializer for Google OAuth requests
      properties:
        access_token:
          type: string
          minLength: 1
      required:
      - access_token
    GoogleDriveAuthRequest:
      type: object
      description: Serializer for Google Drive auth requests
      properties:
        code:
          type: string
        state:
          type: string
    GoogleDriveAuthRequestRequest:
      type: object
      description: Serializer for Google Drive auth requests
      properties:
        code:
          type: string
          minLength: 1
        state:
          type: string
          minLength: 1
    HealthCheckResponse:
      type: object
      description: Health check response format
      properties:
        status:
          type: string
          description: Health status (healthy/degraded/unhealthy)
        timestamp:
          type: string
          format: date-time
          description: Check timestamp
        database:
          type: boolean
          description: Database connectivity
        cache:
          type: boolean
          description: Cache connectivity
      required:
      - status
      - timestamp
    InteractivePollRequest:
      type: object
      description: Serializer for interactive polls
      properties:
        question:
          type: string
          minLength: 1
          description: Poll question
        poll_type:
          $ref: '#/components/schemas/PollTypeEnum'
        options:
          description: Poll options for multiple choice
        min_rating:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Minimum rating value
        max_rating:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Maximum rating value
        allows_multiple:
          type: boolean
          description: Allow multiple selections
        video_timestamp:
          type: number
          format: double
          nullable: true
          description: Video timestamp when poll was created
        expires_at:
          type: string
          format: date-time
          description: When the poll expires
        is_published:
          type: boolean
      required:
      - expires_at
      - question
    LiveReactionRequest:
      type: object
      description: Serializer for live reactions
      properties:
        reaction:
          $ref: '#/components/schemas/ReactionEnum'
        position_x:
          type: number
          format: double
          description: X position on screen (0-1)
        position_y:
          type: number
          format: double
          description: Y position on screen (0-1)
        video_timestamp:
          type: number
          format: double
          description: Video timestamp when reaction was made
        is_active:
          type: boolean
      required:
      - position_x
      - position_y
      - reaction
      - video_timestamp
    MessageTypeEnum:
      enum:
      - text
      - emoji
      - system
      - join
      - leave
      - reaction
      type: string
      description: |-
        * `text` - Text Message
        * `emoji` - Emoji Only
        * `system` - System Message
        * `join` - User Joined
        * `leave` - User Left
        * `reaction` - Video Reaction
    ModerateChat:
      type: object
      description: Serializer for chat moderation actions
      properties:
        action:
          $ref: '#/components/schemas/ActionEnum'
        message_id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        duration_minutes:
          type: integer
          maximum: 10080
          minimum: 1
        reason:
          type: string
          maxLength: 500
        slow_mode_seconds:
          type: integer
          maximum: 3600
          minimum: 0
      required:
      - action
    ModerateChatRequest:
      type: object
      description: Serializer for chat moderation actions
      properties:
        action:
          $ref: '#/components/schemas/ActionEnum'
        message_id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        duration_minutes:
          type: integer
          maximum: 10080
          minimum: 1
        reason:
          type: string
          minLength: 1
          maxLength: 500
        slow_mode_seconds:
          type: integer
          maximum: 3600
          minimum: 0
      required:
      - action
    ModerationQueue:
      type: object
      description: Serializer for moderation queue display
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        report_type:
          $ref: '#/components/schemas/ReportTypeBe8Enum'
        content_type:
          $ref: '#/components/schemas/ContentTypeEnum'
        status:
          $ref: '#/components/schemas/Status9f9Enum'
        priority:
          $ref: '#/components/schemas/Priority5f3Enum'
        description:
          type: string
          description: Detailed description of the issue
        reported_by_email:
          type: string
          readOnly: true
        assigned_to_email:
          type: string
          readOnly: true
        content_title:
          type: string
          description: Get title/name of the reported content
          readOnly: true
        content_url:
          type: string
          description: Get URL of the reported content
          readOnly: true
        age_hours:
          type: number
          format: float
          description: Get age of report in hours
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - age_hours
      - assigned_to_email
      - content_title
      - content_type
      - content_url
      - created_at
      - description
      - id
      - report_type
      - reported_by_email
    ModerationStatusEnum:
      enum:
      - active
      - hidden
      - deleted
      - flagged
      type: string
      description: |-
        * `active` - Active
        * `hidden` - Hidden
        * `deleted` - Deleted
        * `flagged` - Flagged for Review
    Notification:
      type: object
      description: Notification serializer
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          title: Notification Title
          maxLength: 200
        content:
          type: string
          title: Notification Content
        template_type:
          type: string
          readOnly: true
        party:
          type: string
          format: uuid
          nullable: true
        party_title:
          type: string
          readOnly: true
        video:
          type: string
          format: uuid
          nullable: true
        video_title:
          type: string
          readOnly: true
        related_user:
          allOf:
          - $ref: '#/components/schemas/RelatedUser'
          readOnly: true
        icon:
          type: string
          title: Icon Class
          maxLength: 50
        color:
          type: string
          title: Notification Color
          maxLength: 20
        priority:
          $ref: '#/components/schemas/PriorityC93Enum'
        action_url:
          type: string
          format: uri
          maxLength: 200
        action_text:
          type: string
          title: Action Button Text
          maxLength: 50
        requires_action:
          type: boolean
          title: Requires User Action
        status:
          $ref: '#/components/schemas/NotificationStatusEnum'
        is_read:
          type: boolean
          title: Read Status
        is_expired:
          type: boolean
          readOnly: true
        is_urgent:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        read_at:
          type: string
          format: date-time
          nullable: true
        expires_at:
          type: string
          format: date-time
          nullable: true
        time_since_created:
          type: string
          readOnly: true
        metadata:
          title: Additional Metadata
      required:
      - content
      - created_at
      - id
      - is_expired
      - is_urgent
      - party_title
      - related_user
      - template_type
      - time_since_created
      - title
      - video_title
    NotificationPreferences:
      type: object
      description: Notification preferences serializer
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        notifications_enabled:
          type: boolean
          title: Enable Notifications
        quiet_hours_start:
          type: string
          format: time
          nullable: true
        quiet_hours_end:
          type: string
          format: time
          nullable: true
        user_timezone:
          type: string
          maxLength: 50
        in_app_enabled:
          type: boolean
          title: In-App Notifications
        email_enabled:
          type: boolean
          title: Email Notifications
        push_enabled:
          type: boolean
          title: Push Notifications
        sms_enabled:
          type: boolean
          title: SMS Notifications
        party_invites:
          type: boolean
          title: Party Invitations
        party_updates:
          type: boolean
        friend_requests:
          type: boolean
        video_updates:
          type: boolean
        system_updates:
          type: boolean
        billing_notifications:
          type: boolean
        security_alerts:
          type: boolean
        marketing_emails:
          type: boolean
        email_frequency:
          $ref: '#/components/schemas/EmailFrequencyEnum'
        push_token:
          type: string
          maxLength: 500
        push_device_type:
          type: string
          title: Device Type
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - updated_at
    NotificationPreferencesRequest:
      type: object
      description: Notification preferences serializer
      properties:
        notifications_enabled:
          type: boolean
          title: Enable Notifications
        quiet_hours_start:
          type: string
          format: time
          nullable: true
        quiet_hours_end:
          type: string
          format: time
          nullable: true
        user_timezone:
          type: string
          minLength: 1
          maxLength: 50
        in_app_enabled:
          type: boolean
          title: In-App Notifications
        email_enabled:
          type: boolean
          title: Email Notifications
        push_enabled:
          type: boolean
          title: Push Notifications
        sms_enabled:
          type: boolean
          title: SMS Notifications
        party_invites:
          type: boolean
          title: Party Invitations
        party_updates:
          type: boolean
        friend_requests:
          type: boolean
        video_updates:
          type: boolean
        system_updates:
          type: boolean
        billing_notifications:
          type: boolean
        security_alerts:
          type: boolean
        marketing_emails:
          type: boolean
        email_frequency:
          $ref: '#/components/schemas/EmailFrequencyEnum'
        push_token:
          type: string
          maxLength: 500
        push_device_type:
          type: string
          title: Device Type
          maxLength: 20
    NotificationStatusEnum:
      enum:
      - pending
      - processing
      - sent
      - delivered
      - read
      - dismissed
      - expired
      - failed
      type: string
      description: |-
        * `pending` - Pending
        * `processing` - Processing
        * `sent` - Sent
        * `delivered` - Delivered
        * `read` - Read
        * `dismissed` - Dismissed
        * `expired` - Expired
        * `failed` - Failed
    NotificationTemplate:
      type: object
      description: Notification template serializer
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        notification_type:
          $ref: '#/components/schemas/NotificationTypeEnum'
        title_template:
          type: string
          maxLength: 200
        content_template:
          type: string
        email_subject_template:
          type: string
          maxLength: 200
        email_content_template:
          type: string
        icon:
          type: string
          title: Icon Class
          maxLength: 50
        color:
          type: string
          title: Notification Color
          maxLength: 20
        priority:
          $ref: '#/components/schemas/PriorityC93Enum'
        can_disable:
          type: boolean
          title: Users Can Disable
        requires_action:
          type: boolean
          title: Requires User Action
        auto_expire_hours:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Auto Expire (hours)
        is_active:
          type: boolean
          title: Template Active
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - content_template
      - created_at
      - id
      - notification_type
      - title_template
      - updated_at
    NotificationTemplateRequest:
      type: object
      description: Notification template serializer
      properties:
        notification_type:
          $ref: '#/components/schemas/NotificationTypeEnum'
        title_template:
          type: string
          minLength: 1
          maxLength: 200
        content_template:
          type: string
          minLength: 1
        email_subject_template:
          type: string
          maxLength: 200
        email_content_template:
          type: string
        icon:
          type: string
          title: Icon Class
          maxLength: 50
        color:
          type: string
          minLength: 1
          title: Notification Color
          maxLength: 20
        priority:
          $ref: '#/components/schemas/PriorityC93Enum'
        can_disable:
          type: boolean
          title: Users Can Disable
        requires_action:
          type: boolean
          title: Requires User Action
        auto_expire_hours:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Auto Expire (hours)
        is_active:
          type: boolean
          title: Template Active
      required:
      - content_template
      - notification_type
      - title_template
    NotificationTypeEnum:
      enum:
      - party_invite
      - party_started
      - party_reminder
      - friend_request
      - friend_accepted
      - video_uploaded
      - video_processed
      - comment_reply
      - system_update
      - subscription_expiring
      - subscription_expired
      - payment_success
      - payment_failed
      - account_security
      - maintenance_notice
      - feature_announcement
      - community_update
      - weekly_digest
      - content_recommendation
      - achievement_unlocked
      type: string
      description: |-
        * `party_invite` - Party Invitation
        * `party_started` - Party Started
        * `party_reminder` - Party Reminder
        * `friend_request` - Friend Request
        * `friend_accepted` - Friend Request Accepted
        * `video_uploaded` - Video Uploaded
        * `video_processed` - Video Processing Complete
        * `comment_reply` - Comment Reply
        * `system_update` - System Update
        * `subscription_expiring` - Subscription Expiring
        * `subscription_expired` - Subscription Expired
        * `payment_success` - Payment Successful
        * `payment_failed` - Payment Failed
        * `account_security` - Account Security Alert
        * `maintenance_notice` - Maintenance Notice
        * `feature_announcement` - New Feature
        * `community_update` - Community Update
        * `weekly_digest` - Weekly Digest
        * `content_recommendation` - Content Recommendation
        * `achievement_unlocked` - Achievement Unlocked
    PaginatedChatMessageList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
    PaginatedChatModerationLogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ChatModerationLog'
    PaginatedContentReportList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContentReport'
    PaginatedEventAttendeeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EventAttendee'
    PaginatedEventInvitationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EventInvitation'
    PaginatedEventListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EventList'
    PaginatedModerationQueueList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ModerationQueue'
    PaginatedNotificationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
    PaginatedNotificationTemplateList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/NotificationTemplate'
    PaginatedPartyInvitationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PartyInvitation'
    PaginatedReportActionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReportAction'
    PaginatedVideoCommentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/VideoComment'
    PaginatedVideoList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Video'
    PaginatedWatchPartyList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/WatchParty'
    PartyAnalytics:
      type: object
      description: Party analytics serializer
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        party:
          type: string
          format: uuid
          readOnly: true
        party_title:
          type: string
          readOnly: true
        total_participants:
          type: integer
          maximum: 2147483647
          minimum: 0
        peak_concurrent_participants:
          type: integer
          maximum: 2147483647
          minimum: 0
        avg_session_duration:
          type: number
          format: double
          title: Average Session Duration (seconds)
        total_messages:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Total Chat Messages
        total_reactions:
          type: integer
          maximum: 2147483647
          minimum: 0
        sync_issues:
          type: integer
          maximum: 2147483647
          minimum: 0
        buffering_events:
          type: integer
          maximum: 2147483647
          minimum: 0
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        engagement_score:
          type: number
          format: float
          description: Get party engagement score
          readOnly: true
        average_session_duration:
          type: string
          description: Get average session duration as formatted string
          readOnly: true
      required:
      - average_session_duration
      - created_at
      - engagement_score
      - id
      - party
      - party_title
      - updated_at
    PartyInvitation:
      type: object
      description: Party invitation serializer
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        party:
          allOf:
          - $ref: '#/components/schemas/WatchParty'
          readOnly: true
        inviter:
          type: object
          additionalProperties: {}
          readOnly: true
        invitee:
          type: object
          additionalProperties: {}
          readOnly: true
        status:
          $ref: '#/components/schemas/PartyInvitationStatusEnum'
        message:
          type: string
          title: Invitation Message
        is_expired:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        responded_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        expires_at:
          type: string
          format: date-time
          title: Invitation Expires At
      required:
      - created_at
      - expires_at
      - id
      - invitee
      - inviter
      - is_expired
      - party
      - responded_at
    PartyInvitationRequest:
      type: object
      description: Party invitation serializer
      properties:
        status:
          $ref: '#/components/schemas/PartyInvitationStatusEnum'
        message:
          type: string
          title: Invitation Message
        expires_at:
          type: string
          format: date-time
          title: Invitation Expires At
      required:
      - expires_at
    PartyInvitationStatusEnum:
      enum:
      - pending
      - accepted
      - declined
      - expired
      type: string
      description: |-
        * `pending` - Pending
        * `accepted` - Accepted
        * `declined` - Declined
        * `expired` - Expired
    PartyParticipant:
      type: object
      description: Party participant serializer
      properties:
        user:
          type: string
          readOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
        status:
          $ref: '#/components/schemas/PartyParticipantStatusEnum'
        is_active:
          type: boolean
          title: Currently Active
        is_online:
          type: boolean
          readOnly: true
        joined_at:
          type: string
          format: date-time
          readOnly: true
        last_seen:
          type: string
          format: date-time
          readOnly: true
      required:
      - is_online
      - joined_at
      - last_seen
      - user
    PartyParticipantStatusEnum:
      enum:
      - pending
      - approved
      - rejected
      - kicked
      - left
      type: string
      description: |-
        * `pending` - Pending Approval
        * `approved` - Approved
        * `rejected` - Rejected
        * `kicked` - Kicked
        * `left` - Left
    PartyReport:
      type: object
      description: Party report serializer
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        party_title:
          type: string
          readOnly: true
        reporter:
          type: string
          readOnly: true
        reported_user:
          type: string
          readOnly: true
        report_type:
          $ref: '#/components/schemas/PartyReportReportTypeEnum'
        description:
          type: string
          title: Report Description
        status:
          $ref: '#/components/schemas/PartyReportStatusEnum'
        admin_notes:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - description
      - id
      - party_title
      - report_type
      - reported_user
      - reporter
      - updated_at
    PartyReportReportTypeEnum:
      enum:
      - inappropriate_chat
      - spam
      - harassment
      - copyright
      - other
      type: string
      description: |-
        * `inappropriate_chat` - Inappropriate Chat
        * `spam` - Spam
        * `harassment` - Harassment
        * `copyright` - Copyright Violation
        * `other` - Other
    PartyReportRequest:
      type: object
      description: Party report serializer
      properties:
        report_type:
          $ref: '#/components/schemas/PartyReportReportTypeEnum'
        description:
          type: string
          minLength: 1
          title: Report Description
        status:
          $ref: '#/components/schemas/PartyReportStatusEnum'
        admin_notes:
          type: string
      required:
      - description
      - report_type
    PartyReportStatusEnum:
      enum:
      - pending
      - reviewed
      - resolved
      - dismissed
      type: string
      description: |-
        * `pending` - Pending Review
        * `reviewed` - Reviewed
        * `resolved` - Resolved
        * `dismissed` - Dismissed
    PasswordChangeRequest:
      type: object
      description: Password change serializer
      properties:
        current_password:
          type: string
          writeOnly: true
          minLength: 1
        new_password:
          type: string
          writeOnly: true
          minLength: 1
        confirm_password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - confirm_password
      - current_password
      - new_password
    PasswordResetConfirm:
      type: object
      description: Serializer for confirming password reset with token
      properties:
        token:
          type: string
        new_password:
          type: string
        confirm_password:
          type: string
      required:
      - confirm_password
      - new_password
      - token
    PasswordResetConfirmRequest:
      type: object
      description: Serializer for confirming password reset with token
      properties:
        token:
          type: string
          minLength: 1
        new_password:
          type: string
          minLength: 1
        confirm_password:
          type: string
          minLength: 1
      required:
      - confirm_password
      - new_password
      - token
    PasswordResetRequest:
      type: object
      description: Password reset request serializer
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetRequestRequest:
      type: object
      description: Password reset request serializer
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    PatchedChatRoomRequest:
      type: object
      description: Chat room serializer
      properties:
        name:
          type: string
          minLength: 1
          title: Room Name
          maxLength: 200
        description:
          type: string
          title: Room Description
        max_users:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_moderated:
          type: boolean
          title: Moderated Room
        allow_anonymous:
          type: boolean
          title: Allow Anonymous Users
        slow_mode_seconds:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Slow Mode (seconds)
    PatchedContentReportRequest:
      type: object
      description: Serializer for content reports
      properties:
        reported_by:
          type: string
          format: uuid
        report_type:
          $ref: '#/components/schemas/ReportTypeBe8Enum'
        content_type:
          $ref: '#/components/schemas/ContentTypeEnum'
        content_id:
          type: string
          format: uuid
          description: ID of the reported content
        reported_video:
          type: string
          format: uuid
          nullable: true
        reported_party:
          type: string
          format: uuid
          nullable: true
        reported_user:
          type: string
          format: uuid
          nullable: true
        description:
          type: string
          minLength: 1
          description: Detailed description of the issue
        evidence_url:
          type: string
          format: uri
          description: URL to evidence (screenshot, etc.)
          maxLength: 200
        status:
          $ref: '#/components/schemas/Status9f9Enum'
        priority:
          $ref: '#/components/schemas/Priority5f3Enum'
        assigned_to:
          type: string
          format: uuid
          nullable: true
        resolution_notes:
          type: string
        action_taken:
          type: string
    PatchedEventCreateUpdateRequest:
      type: object
      description: Serializer for creating and updating events
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          minLength: 1
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        location:
          type: string
          description: Physical or virtual location
          maxLength: 255
        max_attendees:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: Leave blank for unlimited attendees
        require_approval:
          type: boolean
        privacy:
          $ref: '#/components/schemas/PrivacyEnum'
        banner_image:
          type: string
          format: uri
          maxLength: 200
        category:
          type: string
          maxLength: 100
        tags: {}
    PatchedNotificationPreferencesRequest:
      type: object
      description: Notification preferences serializer
      properties:
        notifications_enabled:
          type: boolean
          title: Enable Notifications
        quiet_hours_start:
          type: string
          format: time
          nullable: true
        quiet_hours_end:
          type: string
          format: time
          nullable: true
        user_timezone:
          type: string
          minLength: 1
          maxLength: 50
        in_app_enabled:
          type: boolean
          title: In-App Notifications
        email_enabled:
          type: boolean
          title: Email Notifications
        push_enabled:
          type: boolean
          title: Push Notifications
        sms_enabled:
          type: boolean
          title: SMS Notifications
        party_invites:
          type: boolean
          title: Party Invitations
        party_updates:
          type: boolean
        friend_requests:
          type: boolean
        video_updates:
          type: boolean
        system_updates:
          type: boolean
        billing_notifications:
          type: boolean
        security_alerts:
          type: boolean
        marketing_emails:
          type: boolean
        email_frequency:
          $ref: '#/components/schemas/EmailFrequencyEnum'
        push_token:
          type: string
          maxLength: 500
        push_device_type:
          type: string
          title: Device Type
          maxLength: 20
    PatchedNotificationTemplateRequest:
      type: object
      description: Notification template serializer
      properties:
        notification_type:
          $ref: '#/components/schemas/NotificationTypeEnum'
        title_template:
          type: string
          minLength: 1
          maxLength: 200
        content_template:
          type: string
          minLength: 1
        email_subject_template:
          type: string
          maxLength: 200
        email_content_template:
          type: string
        icon:
          type: string
          title: Icon Class
          maxLength: 50
        color:
          type: string
          minLength: 1
          title: Notification Color
          maxLength: 20
        priority:
          $ref: '#/components/schemas/PriorityC93Enum'
        can_disable:
          type: boolean
          title: Users Can Disable
        requires_action:
          type: boolean
          title: Requires User Action
        auto_expire_hours:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Auto Expire (hours)
        is_active:
          type: boolean
          title: Template Active
    PatchedPartyInvitationRequest:
      type: object
      description: Party invitation serializer
      properties:
        status:
          $ref: '#/components/schemas/PartyInvitationStatusEnum'
        message:
          type: string
          title: Invitation Message
        expires_at:
          type: string
          format: date-time
          title: Invitation Expires At
    PatchedUserProfileDetailRequest:
      type: object
      description: Detailed user profile serializer including profile data
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 150
        last_name:
          type: string
          minLength: 1
          maxLength: 150
        avatar:
          type: string
          format: binary
          nullable: true
        is_premium:
          type: boolean
          title: Premium User
        subscription_expires:
          type: string
          format: date-time
          nullable: true
    PatchedVideoCommentRequest:
      type: object
      description: Video comment serializer
      properties:
        content:
          type: string
          minLength: 1
          title: Comment
        video_id:
          type: string
          format: uuid
          writeOnly: true
        parent_id:
          type: string
          format: uuid
          writeOnly: true
    PatchedVideoUpdateRequest:
      type: object
      description: Video update serializer
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        allow_download:
          type: boolean
        require_premium:
          type: boolean
          title: Premium Required
    PatchedWatchPartyUpdateRequest:
      type: object
      description: Watch party update serializer
      properties:
        title:
          type: string
          minLength: 1
          title: Party Title
          maxLength: 200
        description:
          type: string
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        max_participants:
          type: integer
          maximum: 2147483647
          minimum: 0
        require_approval:
          type: boolean
          title: Require Host Approval
        allow_chat:
          type: boolean
        allow_reactions:
          type: boolean
        scheduled_start:
          type: string
          format: date-time
          nullable: true
          title: Scheduled Start Time
    PlatformOverview:
      type: object
      description: Serializer for platform overview analytics
      properties:
        days:
          type: integer
          maximum: 365
          minimum: 1
          default: 30
    PollResponseRequest:
      type: object
      description: Serializer for poll responses
      properties:
        selected_option:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Index of selected option
        text_response:
          type: string
          description: Text response for text polls
        rating_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Rating value for rating polls
    PollTypeEnum:
      enum:
      - multiple_choice
      - text
      - rating
      - yes_no
      type: string
      description: |-
        * `multiple_choice` - Multiple Choice
        * `text` - Text Response
        * `rating` - Rating Scale
        * `yes_no` - Yes/No
    Priority5f3Enum:
      enum:
      - low
      - medium
      - high
      - critical
      type: string
      description: |-
        * `low` - Low
        * `medium` - Medium
        * `high` - High
        * `critical` - Critical
    PriorityC93Enum:
      enum:
      - low
      - normal
      - high
      - urgent
      type: string
      description: |-
        * `low` - Low
        * `normal` - Normal
        * `high` - High
        * `urgent` - Urgent
    PrivacyEnum:
      enum:
      - public
      - private
      - friends_only
      type: string
      description: |-
        * `public` - Public
        * `private` - Private
        * `friends_only` - Friends Only
    ReactionEnum:
      enum:
      - laugh
      - love
      - surprise
      - cry
      - angry
      - thumbs_up
      - thumbs_down
      - fire
      - clap
      - mind_blown
      type: string
      description: |-
        * `laugh` - Laugh 😂
        * `love` - Love ❤️
        * `surprise` - Surprise 😮
        * `cry` - Cry 😢
        * `angry` - Angry 😠
        * `thumbs_up` - Thumbs Up 👍
        * `thumbs_down` - Thumbs Down 👎
        * `fire` - Fire 🔥
        * `clap` - Clap 👏
        * `mind_blown` - Mind Blown 🤯
    RelatedUser:
      type: object
      description: Basic user info for related user in notifications
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        avatar:
          type: string
          format: uri
          readOnly: true
          nullable: true
      required:
      - avatar
      - first_name
      - id
      - last_name
    ReminderTypeEnum:
      enum:
      - email
      - push
      - sms
      type: string
      description: |-
        * `email` - Email
        * `push` - Push Notification
        * `sms` - SMS
    ReportAction:
      type: object
      description: Serializer for report actions
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        report:
          type: string
          format: uuid
        action_type:
          $ref: '#/components/schemas/ReportActionActionTypeEnum'
        action_type_display:
          type: string
          readOnly: true
        moderator:
          type: string
          format: uuid
        moderator_name:
          type: string
          readOnly: true
        description:
          type: string
        duration_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Duration for temporary actions (suspension, etc.)
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - action_type
      - action_type_display
      - created_at
      - description
      - id
      - moderator
      - moderator_name
      - report
    ReportActionActionTypeEnum:
      enum:
      - warning
      - content_removed
      - user_suspended
      - user_banned
      - content_edited
      - no_action
      type: string
      description: |-
        * `warning` - Warning Issued
        * `content_removed` - Content Removed
        * `user_suspended` - User Suspended
        * `user_banned` - User Banned
        * `content_edited` - Content Edited
        * `no_action` - No Action Taken
    ReportTypeBe8Enum:
      enum:
      - spam
      - harassment
      - inappropriate
      - copyright
      - violence
      - hate_speech
      - misinformation
      - other
      type: string
      description: |-
        * `spam` - Spam
        * `harassment` - Harassment
        * `inappropriate` - Inappropriate Content
        * `copyright` - Copyright Violation
        * `violence` - Violence
        * `hate_speech` - Hate Speech
        * `misinformation` - Misinformation
        * `other` - Other
    RoleEnum:
      enum:
      - participant
      - moderator
      - host
      type: string
      description: |-
        * `participant` - Participant
        * `moderator` - Moderator
        * `host` - Host
    ScreenShareRequest:
      type: object
      description: Serializer for screen sharing sessions
      properties:
        title:
          type: string
          minLength: 1
          description: Screen share title
          maxLength: 255
        description:
          type: string
        share_type:
          $ref: '#/components/schemas/ShareTypeEnum'
        resolution:
          type: string
          minLength: 1
          description: Resolution (e.g., 1920x1080)
          maxLength: 20
        frame_rate:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Frames per second
        viewers_can_annotate:
          type: boolean
        allow_remote_control:
          type: boolean
        is_recording:
          type: boolean
        is_active:
          type: boolean
        ice_servers:
          description: WebRTC ICE servers configuration
      required:
      - title
    ShareTypeEnum:
      enum:
      - screen
      - window
      - tab
      type: string
      description: |-
        * `screen` - Full Screen
        * `window` - Application Window
        * `tab` - Browser Tab
    SourceTypeEnum:
      enum:
      - upload
      - gdrive
      - s3
      - youtube
      - url
      type: string
      description: |-
        * `upload` - Direct Upload
        * `gdrive` - Google Drive
        * `s3` - Amazon S3
        * `youtube` - YouTube
        * `url` - External URL
    StandardAPIResponse:
      type: object
      description: Standard response format for most API endpoints
      properties:
        success:
          type: boolean
          description: Whether the request was successful
        message:
          type: string
          description: Response message
        data:
          type: object
          additionalProperties: {}
          description: Response data
        timestamp:
          type: string
          format: date-time
          description: Response timestamp
      required:
      - message
      - success
    Status8e4Enum:
      enum:
      - upcoming
      - ongoing
      - completed
      - cancelled
      type: string
      description: |-
        * `upcoming` - Upcoming
        * `ongoing` - Ongoing
        * `completed` - Completed
        * `cancelled` - Cancelled
    Status97dEnum:
      enum:
      - scheduled
      - live
      - paused
      - ended
      - cancelled
      type: string
      description: |-
        * `scheduled` - Scheduled
        * `live` - Live
        * `paused` - Paused
        * `ended` - Ended
        * `cancelled` - Cancelled
    Status9f9Enum:
      enum:
      - pending
      - investigating
      - resolved
      - dismissed
      - escalated
      type: string
      description: |-
        * `pending` - Pending Review
        * `investigating` - Under Investigation
        * `resolved` - Resolved
        * `dismissed` - Dismissed
        * `escalated` - Escalated
    StatusAc5Enum:
      enum:
      - uploading
      - processing
      - ready
      - failed
      - deleted
      type: string
      description: |-
        * `uploading` - Uploading
        * `processing` - Processing
        * `ready` - Ready
        * `failed` - Failed
        * `deleted` - Deleted
    TokenObtainPair:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - refresh
    TokenObtainPairRequest:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - password
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    TwoFactorDisableRequest:
      type: object
      description: Serializer for 2FA disable requests
      properties:
        token:
          type: string
          maxLength: 6
          minLength: 6
      required:
      - token
    TwoFactorDisableRequestRequest:
      type: object
      description: Serializer for 2FA disable requests
      properties:
        token:
          type: string
          minLength: 6
          maxLength: 6
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - token
    TwoFactorVerifyRequest:
      type: object
      description: Serializer for 2FA verification
      properties:
        token:
          type: string
          maxLength: 6
          minLength: 6
      required:
      - token
    TwoFactorVerifyRequestRequest:
      type: object
      description: Serializer for 2FA verification
      properties:
        token:
          type: string
          minLength: 6
          maxLength: 6
      required:
      - token
    UnbanUser:
      type: object
      description: Serializer for unbanning users
      properties:
        user_id:
          type: string
          format: uuid
        reason:
          type: string
          maxLength: 500
      required:
      - user_id
    UnbanUserRequest:
      type: object
      description: Serializer for unbanning users
      properties:
        user_id:
          type: string
          format: uuid
        reason:
          type: string
          minLength: 1
          maxLength: 500
      required:
      - user_id
    UserAnalytics:
      type: object
      description: User analytics serializer
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
        user_name:
          type: string
          readOnly: true
        total_watch_time_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Total Watch Time (minutes)
        total_watch_time_hours:
          type: number
          format: float
          description: Get total watch time in hours
          readOnly: true
        this_week_watch_time_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: This Week Watch Time (minutes)
        this_month_watch_time_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: This Month Watch Time (minutes)
        total_parties_joined:
          type: integer
          maximum: 2147483647
          minimum: 0
        total_parties_hosted:
          type: integer
          maximum: 2147483647
          minimum: 0
        this_week_parties_joined:
          type: integer
          maximum: 2147483647
          minimum: 0
        this_month_parties_joined:
          type: integer
          maximum: 2147483647
          minimum: 0
        total_messages_sent:
          type: integer
          maximum: 2147483647
          minimum: 0
        this_week_messages_sent:
          type: integer
          maximum: 2147483647
          minimum: 0
        this_month_messages_sent:
          type: integer
          maximum: 2147483647
          minimum: 0
        videos_uploaded:
          type: integer
          maximum: 2147483647
          minimum: 0
        reactions_sent:
          type: integer
          maximum: 2147483647
          minimum: 0
        friends_added:
          type: integer
          maximum: 2147483647
          minimum: 0
        average_session_duration_minutes:
          type: number
          format: double
          title: Average Session Duration (minutes)
        favorite_genre:
          type: string
          maxLength: 100
        most_active_hour:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
          title: Most Active Hour (0-23)
        last_updated:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - last_updated
      - total_watch_time_hours
      - user
      - user_name
    UserBasic:
      type: object
      description: Basic user information for chat
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        avatar:
          type: string
          format: uri
          nullable: true
        is_premium:
          type: boolean
          readOnly: true
          title: Premium User
      required:
      - first_name
      - id
      - is_premium
      - last_name
    UserBasicRequest:
      type: object
      description: Basic user information for chat
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 150
        last_name:
          type: string
          minLength: 1
          maxLength: 150
        avatar:
          type: string
          format: binary
          nullable: true
      required:
      - first_name
      - last_name
    UserProfileDetail:
      type: object
      description: Detailed user profile serializer including profile data
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Email Address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        avatar:
          type: string
          format: uri
          nullable: true
        is_premium:
          type: boolean
          title: Premium User
        subscription_expires:
          type: string
          format: date-time
          nullable: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
        profile:
          type: object
          additionalProperties: {}
          description: Get user profile data
          readOnly: true
      required:
      - date_joined
      - email
      - first_name
      - id
      - last_name
      - profile
    UserProfileDetailRequest:
      type: object
      description: Detailed user profile serializer including profile data
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 150
        last_name:
          type: string
          minLength: 1
          maxLength: 150
        avatar:
          type: string
          format: binary
          nullable: true
        is_premium:
          type: boolean
          title: Premium User
        subscription_expires:
          type: string
          format: date-time
          nullable: true
      required:
      - first_name
      - last_name
    UserRegistration:
      type: object
      description: User registration serializer
      properties:
        email:
          type: string
          format: email
          title: Email Address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        promo_code:
          type: string
          maxLength: 50
      required:
      - email
      - first_name
      - last_name
    UserRegistrationRequest:
      type: object
      description: User registration serializer
      properties:
        email:
          type: string
          format: email
          minLength: 1
          title: Email Address
          maxLength: 254
        password:
          type: string
          writeOnly: true
          minLength: 1
        confirm_password:
          type: string
          writeOnly: true
          minLength: 1
        first_name:
          type: string
          minLength: 1
          maxLength: 150
        last_name:
          type: string
          minLength: 1
          maxLength: 150
        promo_code:
          type: string
          maxLength: 50
      required:
      - confirm_password
      - email
      - first_name
      - last_name
      - password
    Video:
      type: object
      description: Basic video serializer
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        uploader:
          type: string
          readOnly: true
        thumbnail:
          type: string
          format: uri
          nullable: true
        duration:
          type: string
          nullable: true
        duration_formatted:
          type: string
          readOnly: true
        file_size:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
          title: File Size (bytes)
        file_size_formatted:
          type: string
          readOnly: true
        source_type:
          $ref: '#/components/schemas/SourceTypeEnum'
        resolution:
          type: string
          maxLength: 20
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        status:
          $ref: '#/components/schemas/StatusAc5Enum'
        view_count:
          type: integer
          readOnly: true
        like_count:
          type: integer
          readOnly: true
        is_liked:
          type: boolean
          readOnly: true
        can_edit:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - can_edit
      - created_at
      - duration_formatted
      - file_size_formatted
      - id
      - is_liked
      - like_count
      - title
      - updated_at
      - uploader
      - view_count
    VideoComment:
      type: object
      description: Video comment serializer
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        content:
          type: string
          title: Comment
        user:
          type: string
          readOnly: true
        parent:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        is_edited:
          type: boolean
          readOnly: true
        replies:
          type: string
          readOnly: true
        can_edit:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - can_edit
      - content
      - created_at
      - id
      - is_edited
      - parent
      - replies
      - updated_at
      - user
    VideoCommentRequest:
      type: object
      description: Video comment serializer
      properties:
        content:
          type: string
          minLength: 1
          title: Comment
        video_id:
          type: string
          format: uuid
          writeOnly: true
        parent_id:
          type: string
          format: uuid
          writeOnly: true
      required:
      - content
    VideoCreate:
      type: object
      description: Video creation serializer
      properties:
        title:
          type: string
          maxLength: 200
        description:
          type: string
        source_type:
          $ref: '#/components/schemas/SourceTypeEnum'
        source_url:
          type: string
          format: uri
          maxLength: 200
        source_id:
          type: string
          title: External Source ID
          maxLength: 255
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        allow_download:
          type: boolean
        require_premium:
          type: boolean
          title: Premium Required
      required:
      - title
    VideoCreateRequest:
      type: object
      description: Video creation serializer
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
        source_type:
          $ref: '#/components/schemas/SourceTypeEnum'
        source_url:
          type: string
          format: uri
          maxLength: 200
        source_id:
          type: string
          title: External Source ID
          maxLength: 255
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        allow_download:
          type: boolean
        require_premium:
          type: boolean
          title: Premium Required
      required:
      - title
    VideoDetail:
      type: object
      description: Detailed video serializer with additional information
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        uploader:
          type: string
          readOnly: true
        thumbnail:
          type: string
          format: uri
          nullable: true
        duration:
          type: string
          nullable: true
        duration_formatted:
          type: string
          readOnly: true
        file_size:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
          title: File Size (bytes)
        file_size_formatted:
          type: string
          readOnly: true
        source_type:
          $ref: '#/components/schemas/SourceTypeEnum'
        resolution:
          type: string
          maxLength: 20
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        status:
          $ref: '#/components/schemas/StatusAc5Enum'
        view_count:
          type: integer
          readOnly: true
        like_count:
          type: integer
          readOnly: true
        is_liked:
          type: boolean
          readOnly: true
        can_edit:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        source_url:
          type: string
          format: uri
          maxLength: 200
        codec:
          type: string
          title: Video Codec
          maxLength: 50
        bitrate:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Bitrate (kbps)
        fps:
          type: number
          format: double
          nullable: true
          title: Frame Rate
        allow_download:
          type: boolean
        require_premium:
          type: boolean
          title: Premium Required
        comments_count:
          type: string
          readOnly: true
        can_download:
          type: string
          readOnly: true
      required:
      - can_download
      - can_edit
      - comments_count
      - created_at
      - duration_formatted
      - file_size_formatted
      - id
      - is_liked
      - like_count
      - title
      - updated_at
      - uploader
      - view_count
    VideoRequest:
      type: object
      description: Basic video serializer
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
        thumbnail:
          type: string
          format: binary
          nullable: true
        duration:
          type: string
          nullable: true
        file_size:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
          title: File Size (bytes)
        source_type:
          $ref: '#/components/schemas/SourceTypeEnum'
        resolution:
          type: string
          maxLength: 20
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        status:
          $ref: '#/components/schemas/StatusAc5Enum'
      required:
      - title
    VideoUpdate:
      type: object
      description: Video update serializer
      properties:
        title:
          type: string
          maxLength: 200
        description:
          type: string
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        allow_download:
          type: boolean
        require_premium:
          type: boolean
          title: Premium Required
      required:
      - title
    VideoUpdateRequest:
      type: object
      description: Video update serializer
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        allow_download:
          type: boolean
        require_premium:
          type: boolean
          title: Premium Required
      required:
      - title
    VideoUpload:
      type: object
      description: Video upload progress serializer
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        filename:
          type: string
          maxLength: 255
        file_size:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        status:
          $ref: '#/components/schemas/VideoUploadStatusEnum'
        progress_percentage:
          type: number
          format: double
        error_message:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        completed_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - completed_at
      - created_at
      - file_size
      - filename
      - id
      - updated_at
    VideoUploadStatusEnum:
      enum:
      - pending
      - uploading
      - processing
      - completed
      - failed
      - cancelled
      type: string
      description: |-
        * `pending` - Pending
        * `uploading` - Uploading
        * `processing` - Processing
        * `completed` - Completed
        * `failed` - Failed
        * `cancelled` - Cancelled
    VisibilityEnum:
      enum:
      - public
      - friends
      - private
      type: string
      description: |-
        * `public` - Public
        * `friends` - Friends Only
        * `private` - Private
    VoiceChatRoomRequest:
      type: object
      description: Serializer for voice chat rooms
      properties:
        max_participants:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        require_permission:
          type: boolean
          description: Require host permission to join
        audio_quality:
          $ref: '#/components/schemas/AudioQualityEnum'
        noise_cancellation:
          type: boolean
        echo_cancellation:
          type: boolean
        ice_servers:
          description: WebRTC ICE servers configuration
        is_active:
          type: boolean
    WatchParty:
      type: object
      description: Basic watch party serializer
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          title: Party Title
          maxLength: 200
        description:
          type: string
        host:
          type: object
          additionalProperties: {}
          readOnly: true
        video:
          allOf:
          - $ref: '#/components/schemas/Video'
          readOnly: true
        room_code:
          type: string
          readOnly: true
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        max_participants:
          type: integer
          maximum: 2147483647
          minimum: 0
        participant_count:
          type: integer
          readOnly: true
        is_full:
          type: boolean
          readOnly: true
        require_approval:
          type: boolean
          title: Require Host Approval
        allow_chat:
          type: boolean
        allow_reactions:
          type: boolean
        status:
          $ref: '#/components/schemas/Status97dEnum'
        scheduled_start:
          type: string
          format: date-time
          nullable: true
          title: Scheduled Start Time
        started_at:
          type: string
          format: date-time
          nullable: true
          title: Actually Started At
        ended_at:
          type: string
          format: date-time
          nullable: true
        can_join:
          type: boolean
          readOnly: true
        can_edit:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - can_edit
      - can_join
      - created_at
      - host
      - id
      - is_full
      - participant_count
      - room_code
      - title
      - updated_at
      - video
    WatchPartyCreate:
      type: object
      description: Watch party creation serializer
      properties:
        title:
          type: string
          title: Party Title
          maxLength: 200
        description:
          type: string
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        max_participants:
          type: integer
          maximum: 2147483647
          minimum: 0
        require_approval:
          type: boolean
          title: Require Host Approval
        allow_chat:
          type: boolean
        allow_reactions:
          type: boolean
        scheduled_start:
          type: string
          format: date-time
          nullable: true
          title: Scheduled Start Time
      required:
      - title
    WatchPartyCreateRequest:
      type: object
      description: Watch party creation serializer
      properties:
        title:
          type: string
          minLength: 1
          title: Party Title
          maxLength: 200
        description:
          type: string
        video_id:
          type: string
          format: uuid
          writeOnly: true
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        max_participants:
          type: integer
          maximum: 2147483647
          minimum: 0
        require_approval:
          type: boolean
          title: Require Host Approval
        allow_chat:
          type: boolean
        allow_reactions:
          type: boolean
        scheduled_start:
          type: string
          format: date-time
          nullable: true
          title: Scheduled Start Time
      required:
      - title
      - video_id
    WatchPartyDetail:
      type: object
      description: Detailed watch party serializer
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          title: Party Title
          maxLength: 200
        description:
          type: string
        host:
          type: object
          additionalProperties: {}
          readOnly: true
        video:
          allOf:
          - $ref: '#/components/schemas/Video'
          readOnly: true
        room_code:
          type: string
          readOnly: true
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        max_participants:
          type: integer
          maximum: 2147483647
          minimum: 0
        participant_count:
          type: integer
          readOnly: true
        is_full:
          type: boolean
          readOnly: true
        require_approval:
          type: boolean
          title: Require Host Approval
        allow_chat:
          type: boolean
        allow_reactions:
          type: boolean
        status:
          $ref: '#/components/schemas/Status97dEnum'
        scheduled_start:
          type: string
          format: date-time
          nullable: true
          title: Scheduled Start Time
        started_at:
          type: string
          format: date-time
          nullable: true
          title: Actually Started At
        ended_at:
          type: string
          format: date-time
          nullable: true
        can_join:
          type: boolean
          readOnly: true
        can_edit:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        participants:
          type: array
          items:
            $ref: '#/components/schemas/PartyParticipant'
          readOnly: true
        current_timestamp:
          type: string
          title: Current Video Position
        current_timestamp_formatted:
          type: string
          readOnly: true
        is_playing:
          type: boolean
        last_sync_at:
          type: string
          format: date-time
          readOnly: true
          title: Last Sync Update
      required:
      - can_edit
      - can_join
      - created_at
      - current_timestamp_formatted
      - host
      - id
      - is_full
      - last_sync_at
      - participant_count
      - participants
      - room_code
      - title
      - updated_at
      - video
    WatchPartyRequest:
      type: object
      description: Basic watch party serializer
      properties:
        title:
          type: string
          minLength: 1
          title: Party Title
          maxLength: 200
        description:
          type: string
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        max_participants:
          type: integer
          maximum: 2147483647
          minimum: 0
        require_approval:
          type: boolean
          title: Require Host Approval
        allow_chat:
          type: boolean
        allow_reactions:
          type: boolean
        status:
          $ref: '#/components/schemas/Status97dEnum'
        scheduled_start:
          type: string
          format: date-time
          nullable: true
          title: Scheduled Start Time
        started_at:
          type: string
          format: date-time
          nullable: true
          title: Actually Started At
        ended_at:
          type: string
          format: date-time
          nullable: true
      required:
      - title
    WatchPartyUpdate:
      type: object
      description: Watch party update serializer
      properties:
        title:
          type: string
          title: Party Title
          maxLength: 200
        description:
          type: string
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        max_participants:
          type: integer
          maximum: 2147483647
          minimum: 0
        require_approval:
          type: boolean
          title: Require Host Approval
        allow_chat:
          type: boolean
        allow_reactions:
          type: boolean
        scheduled_start:
          type: string
          format: date-time
          nullable: true
          title: Scheduled Start Time
      required:
      - title
    WatchPartyUpdateRequest:
      type: object
      description: Watch party update serializer
      properties:
        title:
          type: string
          minLength: 1
          title: Party Title
          maxLength: 200
        description:
          type: string
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        max_participants:
          type: integer
          maximum: 2147483647
          minimum: 0
        require_approval:
          type: boolean
          title: Require Host Approval
        allow_chat:
          type: boolean
        allow_reactions:
          type: boolean
        scheduled_start:
          type: string
          format: date-time
          nullable: true
          title: Scheduled Start Time
      required:
      - title
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
- name: Authentication
  description: User authentication and account management
- name: Users
  description: User profile and social features
- name: Videos
  description: Video upload, management, and streaming
- name: Parties
  description: Watch party creation and management
- name: Chat
  description: Real-time messaging during parties
- name: Billing
  description: Subscription and payment management
- name: Analytics
  description: Platform and user analytics
- name: Notifications
  description: Push and email notifications
- name: Integrations
  description: Third-party service integrations
- name: Search
  description: Global search and discovery
- name: Social
  description: Social groups and interactions
- name: Admin
  description: Administrative functions
