name: 🏥 Health Check

on:
  schedule:
    # Run health checks every 30 minutes
    - cron: '*/30 * * * *'
  workflow_dispatch:
    inputs:
      check_type:
        description: 'Type of health check'
        required: true
        default: 'full'
        type: choice
        options:
        - quick
        - full
        - deep

env:
  DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
  DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
  DEPLOY_PORT: ${{ secrets.DEPLOY_PORT || '22' }}

jobs:
  health-check:
    runs-on: ubuntu-latest
    if: vars.ENABLE_HEALTH_CHECKS != 'false'
    
    steps:
    - name: 🔑 Setup SSH key
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -p $DEPLOY_PORT -H $DEPLOY_HOST >> ~/.ssh/known_hosts 2>/dev/null || true

    - name: 🏥 Run health checks
      id: health
      run: |
        echo "🏥 Running health checks on production server..."
        
        CHECK_TYPE="${{ github.event.inputs.check_type || 'quick' }}"
        
        # Run health checks on server
        ssh -p $DEPLOY_PORT $DEPLOY_USER@$DEPLOY_HOST "
          cd /var/www/watchparty
          
          echo '🔍 Running $CHECK_TYPE health check...'
          
          case '$CHECK_TYPE' in
            'quick')
              ./manage.sh check --quick
              ;;
            'full')
              ./manage.sh check
              ./manage.sh prod-status
              ;;
            'deep')
              ./manage.sh check
              ./manage.sh prod-status
              ./manage.sh monitor
              ;;
          esac
        " 2>&1 | tee health_check.log
        
        # Check if health check passed
        if [ ${PIPESTATUS[0]} -eq 0 ]; then
          echo "health_status=healthy" >> $GITHUB_OUTPUT
        else
          echo "health_status=unhealthy" >> $GITHUB_OUTPUT
        fi

    - name: 📊 Health check summary
      run: |
        echo "## 🏥 Health Check Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Server**: $DEPLOY_HOST" >> $GITHUB_STEP_SUMMARY
        echo "- **Check Type**: ${{ github.event.inputs.check_type || 'quick' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Timestamp**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.health.outputs.health_status }}" == "healthy" ]; then
          echo "✅ **Status**: All systems healthy!" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Status**: Health check failed!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔍 Troubleshooting" >> $GITHUB_STEP_SUMMARY
          echo "- Check server logs: \`./manage.sh prod-logs\`" >> $GITHUB_STEP_SUMMARY
          echo "- Restart services: \`./manage.sh prod-restart\`" >> $GITHUB_STEP_SUMMARY
          echo "- Run diagnostics: \`./manage.sh check\`" >> $GITHUB_STEP_SUMMARY
        fi

    - name: 🚨 Alert on failure
      if: steps.health.outputs.health_status == 'unhealthy'
      run: |
        echo "🚨 Health check failed!"
        echo "Server: $DEPLOY_HOST"
        echo "Time: $(date)"
        # Add alerting logic here (email, Slack, PagerDuty, etc.)
